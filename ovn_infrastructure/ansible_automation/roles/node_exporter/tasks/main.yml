---
- name: check if {{ node_exporter_archive_base }} is already provisioned
  stat:
    path: "{{ node_exporter_install_dir }}/{{ node_exporter_archive_base }}"
  register: node_exporter_provision_status

- name: deploy node_exporter package.
  unarchive:
    src: "{{ node_exporter_archive }}"
    dest: "{{ node_exporter_install_dir }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755
    copy: no
  when: node_exporter_provision_status.stat.exists == false

- name: link to node_exporter directory {{ node_exporter_base_dir }}
  file:
    src: "{{ node_exporter_archive_base }}"
    dest: "{{ node_exporter_base_dir }}"
    force: yes
    state: link

- name: deploy node_exporter service
  template:
    src: "node_exporter.service.j2"
    dest: "/etc/systemd/system/node_exporter.service"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0644
  register: node_exporter_service_result

- name: reload system service configs.
  shell: systemctl daemon-reload
  when: >
    node_exporter_service_result.changed == true

- name: Enable and start node_exporter package.
  service:
    name: node_exporter
    state: restarted
  when: >
    node_exporter_service_result.changed == true

- name: Ensure node_exporter is started and enabled to start at boot.
  service:
    name: node_exporter
    state: started
    enabled: yes
