- include: ../ovn_vars.yml ovn_vars_hosts=all,!cumulus_switch,!ovn_manager

- name: Set Elastic Search Hostname based on eserv_type=lbonly host attribute
  hosts: elasticsearch
  tasks:
    - set_fact: elasticsearch_host="{{ hostvars[item]['ansible_nodename'] }}"
      with_items: "{{ groups['elasticsearch'] }}"
      when: hostvars[item].eserv_type == "lbonly"

- name: configure nginx on elasticsearch lbnode
  hosts: elasticsearch
  roles:
    - { role: nginx, when: "hostvars[inventory_hostname].eserv_type == 'lbonly'" }    
  vars:
    - es_client_ssl_certificate_path: "/etc/pki/tls/elasticsearch-client/certs/{{ inventory_hostname }}.pem"
    - es_client_ssl_certificate_key_path: "/etc/pki/tls/elasticsearch-client/private/{{ inventory_hostname }}.pem"
    - es_client_ssl_client_certificate: "/etc/pki/tls/elasticsearch-client/certs/bundle.pem"
    - nginx_enable_ssl: "true"
    - elasticsearch_port: 9200
    - nginx_sites:
        elasticsearch_lbnode:
          - listen {{ elasticsearch_port }} ssl
          - server_name localhost
          - ssl_certificate {{ es_client_ssl_certificate_path }}
          - ssl_certificate_key {{ es_client_ssl_certificate_key_path }}
          - ssl_client_certificate {{ es_client_ssl_client_certificate }}
          - ssl_verify_depth 2
          - ssl_verify_client on
    - nginx_configs:
        elasticsearch_lbnode_upstream:
          - upstream elasticsearch_lbnode {
              server 127.0.0.1:9201;
            }
          
    - nginx_locations:
      - site: elasticsearch_lbnode
        locations:
          - name: elasticsearch_lbnode
            location:
              - location / {
                  proxy_pass http://elasticsearch_lbnode;
                  proxy_set_header content-type "application/json";
                }
