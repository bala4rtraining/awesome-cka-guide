---

- name: check .ssh exists
  stat: path="{{ vss_ssh_directory }}"
  register: sshdir_result

- name: Create ssh root directory
  file: path=/home/{{ vss_username }}/.ssh state=directory owner={{ vss_username }} group={{ vss_username }} mode=700
  when: sshdir_result.stat.exists == false

- name: Add was user into the ftp group
  user: name='{{ vss_username }}'
        groups=ftp
        append=yes
  when: (inventory_hostname in groups['ftps_server'])

- name: Append the public key to FTPS authorized key
  authorized_key:
    user: "{{ vss_username }}"
    state: present
    key: "{{ vss_public }}" 
  when: (inventory_hostname in groups['ftps_server'])

- name: Append the public key to FluentD aggregator server authorized key
  authorized_key:
    user: "{{ vss_username }}"
    state: present
    key: "{{ vss_public }}"
  when: (inventory_hostname in groups['fluentd_aggregator'])

- name: append authorized keys with mirror VSS server from other DC
  authorized_key:
    user: "{{ vss_username }}"
    state: present
    key: "{{ vss_mirror_public }}"
  when: (inventory_hostname in groups['ovn_vss_servers'])

- name: check vss.pub file exists
  stat: path={{ vss_ssh_idrsapub_path }}
  register: idrsafilepub_result
  when: ( inventory_hostname in groups['ovn_vss_servers'])

- name: Create vss.pub file
  file: "path={{ vss_ssh_idrsapub_path }} state=touch owner={{ vss_username }} group={{ vss_username }} mode=644"
  when: (inventory_hostname in groups['ovn_vss_servers']) and idrsafilepub_result.stat.exists == False

- name: Check if already public key exist
  shell: grep  {{ vss_public }} {{ vss_ssh_idrsapub_path }}
  register: idrsapub_result
  ignore_errors: True
  when: (inventory_hostname in groups['ovn_vss_servers'])

- name: Append the public keys  to vss.pub file
  copy: content={{ vss_public }}  dest={{ vss_ssh_idrsapub_path }}
  when: (inventory_hostname in groups['ovn_vss_servers']) and idrsapub_result.stdout == ""

- name: check vss file exists
  stat: path={{ vss_ssh_idrsa_path }}
  register: idrsafile_result
  when: ( inventory_hostname in groups['ovn_vss_servers'])

- name: Create vss file
  file: "path={{ vss_ssh_idrsa_path }} state=touch owner={{ vss_username }} group={{ vss_username }} mode=600"
  when: (inventory_hostname in groups['ovn_vss_servers']) and idrsafile_result.stat.exists == False

- name: Check if already private key exist
  shell: grep  "{{ vss_key }}"  {{ vss_ssh_idrsa_path }} 
  register: idrsa_result
  ignore_errors: True
  when: (inventory_hostname in groups['ovn_vss_servers'])

- name: Append the private keys  to vss file
  copy: content="{{ vss_key }}"  dest={{ vss_ssh_idrsa_path }}
  when: (inventory_hostname in groups['ovn_vss_servers']) and idrsa_result.stdout == ""