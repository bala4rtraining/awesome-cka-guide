## {{ ansible_managed }}

[SYSLOG_UdpInput]
type="UdpInput"
address = "{{ syslogd_host }}:{{ syslogd_port }}"
decoder = "SYSLOG_decoder"

##### decode in two steps
[SYSLOG_decoder]
type = "MultiDecoder"
subs = ['OVN_decoder_header', 'OVNlog_decoder']
cascade_strategy = "all"

##### [STEP 1] OVN Lager messages strip off the required key items  (regex tested on OSX syslog)
[OVN_decoder_header]
type = "PayloadRegexDecoder"
match_regex = '\<(?P<msgsize>\d+)\>(?P<XTimestamp>\d+-\d+-\d+T\d+:\d+:\d+.\d+\+\d+:\d+) (?P<Hostname>\S+) (?P<Type>\S+)\[(?P<msgpos>\d+)\]: \[(?P<Severity>[^\]]+)\](?P<Xmessage>[\S\s]+)$'
timestamp_layout = "2006-01-02T15:04:05.999999Z07:00"
timestamp_location = "{{ ansible_date_time.tz }}"
[OVN_decoder_header.message_fields]
Type= "%Type%"
Hostname= "%Hostname%"
Payload = "%Xmessage%"
logTimestamp ="%XTimestamp%"

[OVN_decoder_header.severity_map]
debug = 7
info = 6
notice = 5
warning = 4
error = 3
critical = 2

##### [STEP 2] OVN LOG (key-value) data gets stripped from Lager messages, and we also add a CRC-32
[OVNlog_decoder]
type = "SandboxDecoder"
filename = "lua_decoders/ovn_log.lua"


##### Make fields JSON (per Elasticsearch requirements)
[SYSLOG_ESJsonEncoder]
type="ESJsonEncoder"
es_index_from_timestamp = true
type_name = "%{Type}"
{% raw %}
index = "%{Type}-syslog-%{%Y.%m.%d}"
{% endraw %}

##### Send the JSON to Elasticsearch
[SYSLOG_ElasticSearchOutput]
type="ElasticSearchOutput"
message_matcher = 'Logger == "SYSLOG_UdpInput"'
{% if elasticsearch_client_ssl_enabled == "true" %}
server = "https://{{ elasticsearch_host }}:{{ elasticsearch_port }}"
{% else %}
server = "http://{{ elasticsearch_host }}:{{ elasticsearch_port }}"
{% endif %}
flush_interval = 5000
flush_count = 100
encoder = "SYSLOG_ESJsonEncoder"
    {% if elasticsearch_client_ssl_enabled == "true" %}
    [SYSLOG_ElasticSearchOutput.tls]
    cert_file = "/etc/pki/tls/elasticsearch-client/certs/{{ inventory_hostname }}.pem"
    key_file = "/etc/pki/tls/elasticsearch-client/private/{{ inventory_hostname }}.pem"
    root_cafile = "/etc/pki/tls/elasticsearch-client/certs/bundle.pem"
    client_auth = "RequireAndVerifyClientCert"
    prefer_server_ciphers = true
    min_version = "TLS12"
    {% endif %}
