---
# Install Kerberos server packages
- name: Install the kerberos packages 
  yum: 
    name: "{{ item }}"
    state: present
  with_items: "{{ kerberos_server_packages }}"

# Create KDC config file
- name: Copy the kdc configuration file 
  template:
    src: kdc.conf.j2
    dest: /var/kerberos/krb5kdc/kdc.conf
  register: kdc_config_status

# Create ACL config file
- name: Copy the kdc acl configuration file 
  template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl
  register: kadmind_config_status

# Create client config
- name: Copy the client configuration file 
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf

# Check the existence of initial kerberos database
- name: Check kerberos database file
  stat:
    path: /var/kerberos/db_created
  register: kerberos_db_status

# Create kerberos db
- name: Create the initial kerberos database
  shell:
    cmd: |
      kdb5_util create -s <<EOF
      {{ kerberos_kdc_master_db_pass }}
      {{ kerberos_kdc_master_db_pass }}
      EOF
      touch /var/kerberos/db_created
  when: kerberos_db_status.stat.exists == False

# Restart kerberos services, if config changes
- name: Start the kerberos services 
  systemd: 
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items: "{{ kerberos_services }}"
  when: (kdc_config_status.changed == true) or (kadmind_config_status.changed == true)

# Start kerberos services
- name: Start the kerberos services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ kerberos_services }}"

# Check the existence of kerberos admin
- name: Check kerberos admin status
  stat:
    path: /var/kerberos/admin_created
  register: kerberos_admin_status

# Create admin for kerberos db
- name: Create an admin for the administering the kerberos database
  shell:
    cmd: |
      kadmin.local -q "addprinc {{ kerberos_kadmin_user }}/admin@{{ kerberos_realm_name|upper() }}" <<EOF
      {{ kerberos_kadmin_pass }}
      {{ kerberos_kadmin_pass }}
      EOF
      touch /var/kerberos/admin_created
  when: kerberos_admin_status.stat.exists == False

# Enable cross-dc kerberos authentication
- name: Create principal for cross-datacenter kerberos
  shell: 
    cmd: |
      kadmin.local  -q "addprinc krbtgt/{{ kerberos_realm_name|upper() }}@{{ kerberos_realm_name|upper() }}" <<EOF
      {{ kerberos_xdc_pass }}
      {{ kerberos_xdc_pass }}
      EOF
      kadmin.local  -q "addprinc krbtgt/{{ kerberos_xdc_realm_name|upper() }}@{{ kerberos_realm_name|upper() }}" <<EOF
      {{ kerberos_xdc_pass }}
      {{ kerberos_xdc_pass }}
      EOF
      kadmin.local  -q "addprinc krbtgt/{{ kerberos_realm_name|upper() }}@{{ kerberos_xdc_realm_name|upper() }}" <<EOF
      {{ kerberos_xdc_pass }}
      {{ kerberos_xdc_pass }}
      EOF
  when: kerberos_admin_status.stat.exists == False