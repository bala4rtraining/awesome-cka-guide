[
  {kernel,[
    {inet_dist_use_interface,{{erlang_dist_ip}}},
    {inet_dist_listen_min, {{inet_dist_listen_min}}},
    {inet_dist_listen_max, {{inet_dist_listen_max}}},
    {start_pg2, true}
  ]},

  {ovn_switch, [
    {hsm_lmk_check_value, "{{hsm_lmk_check_value}}"},
    {simulate_hsm_responses, {{simulate_hsm_responses}}},
    {umf_delivery_service, [{service_enabled, {{enable_umf_deliver_service}} },
                            {topic, "{{tran_log_kafka_topic}}"},
                            {partitions, {{partitions_count}} },
                            {retries, {{retry_count}} }]},
    {% if remote_instance is defined %}
    {station_state_sync, [{topic, "{{station_state_kafka_topic}}"},
                          {partitions, {{partitions_count}}},
                          {retries, {{retry_count}}}]},
    {cdb_state_sync, [{topic, "{{cdb_state_kafka_topic}}"},
                      {partitions, {{partitions_count}}},
                      {retries, {{retry_count}}}]},
    {% endif %}
    {instance_id, {{local_instance}}},
    {ovn_id, {{ovn_id}} },
    {netiso_ip,   {{netiso_ip}} },
    {netiso_port, {{netiso_port}} },
    {netcontext_ip,   {{netcontext_ip}}},
    {netcontext_port, {{netcontext_port}}},
    {environment, {{environment_name}} },
    {local_instance, {{local_instance}}},
    {data_dir,    "{{data_dir}}"},
    {tran_log_enabled, {{tran_log_on}}},
    {tran_log_connection_options, [
      {retry_amount, 0},
      {thrift_host, "localhost"},
      {thrift_port, 9500},
      {thrift_options, [{framed, false}]},
      {binary_response, true}
    ]},
    {nodes, {{switch_nodes}}},
    {hsm_ssl_options, {{hsm_ssl_opts}}},
    {pull_key, "{{pull_key}}"},
    {atr_timeout, {{atr_timeout}}}
  ]},

  {brod, [
    { clients, [
      { brod_client_1, [
        {endpoints, {{kafka_endpoints}}},
        {reconnect_cool_down_seconds, 1},
        {auto_start_producers, true},
        {default_producer_config, [
          {ack_timeout, 100},
          {compression, no_compression},
          {required_acks, -1}
        ]},
        {allow_topic_auto_creation, false},
        {query_api_versions, false}
      ]}
    ]}
  ]},

  {ovn_acceptor, [
    {services, [
      {from_mediator, [{service_ip,   {{switch_acceptor_ip_for_mediator}}},
                       {service_port, {{switch_acceptor_port_for_mediator}}},
                       {ssl_options,  []},
                       {handler,      ovn_switch_mediator_handler}]}
    ]}
  ]},

  {lager, [
    {colored, true},
    {crash_log, "{{log_dir}}/{{hostvars[inventory_hostname].ansible_hostname}}.crash.log"},
    {crash_log_size, 0},
    {crash_log_date, ""},
    {error_logger_hwm, undefined},
    {handlers, [
      {lager_syslog_backend, ["ovnswitch", local1, info]},
      {lager_file_backend, [{file, "{{log_dir}}/{{hostvars[inventory_hostname].ansible_hostname}}.log"}, {level, info}, {size, 104857600}, {count, 5}]}
      ]}
    ]},

  {pooler, [
    { metrics_module, ovn_metric},
    { pools, [{{riak_endpoints_pooler_config}}, {{switch_endpoints_pooler_config}} | {{hsm_pools}} ] }
  ]},

  {vmstats, [
    %% Default delay => 1000 millisec, base_key => "vmstats"
    {base_key, "ovn_switch"}
  ]},

  {ovn_profile, [
    {data_dir, "{{profile_dir}}"},
    {use_profile_in_deps, {{use_profile_in_deps}}}
  ]},

  {ovn_currency_gen, [
    {data_dir, "{{currency_dir}}"},
    {use_currency_in_deps, {{use_currency_in_deps}}}
  ]},

  {ovn_opdb, [
    {ovn_vip_ef_sync_time, {{ovn_vip_ef_sync_time}}}
  ]}

].
