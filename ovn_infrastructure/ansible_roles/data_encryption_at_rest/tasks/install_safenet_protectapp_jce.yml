---
#
# This playbook installs and configures SafeNet ProtectApp JCE
# on OVN nodes that use to perform encryption and decrypton
# based on Java Crypto Architecture (JCA).
#
#


#
# Download and install SafeNet ProtectApp JCE libraries
#
- name: Download the SafeNet installation zip file from artifactory
  get_url:
    url:  "{{cryptolib_artifactory_url}}/{{safenet_protectapp_repo_path}}"
    dest: "{{safenet_protectapp_staging_dir}}"


- name: Unpack the SafeNet installation zip file
  unarchive:
    src:  "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_file}}"
    dest: "{{safenet_protectapp_staging_dir}}"
    copy: no

    
- name: Install SafeNet ProtectApp IngrianNAE library
  copy:
    src: "{{item}}"
    dest: "{{safenet_protectapp_install_path}}"
    owner: root
    group: root
    remote_src: true 
  with_items:
    - "{{safenet_protectapp_installer_path}}/IngrianNAE-8.5.000.jar"
    - "{{safenet_protectapp_installer_path}}/IngrianNAE.properties"
    - "{{safenet_protectapp_installer_path}}/commons-codec-1.6.jar"
    - "{{safenet_protectapp_installer_path}}/jaxb-api-2.1.jar"
    - "{{safenet_protectapp_installer_path}}/parser.jar"
    - "{{safenet_protectapp_installer_path}}/jnet.jar"
    - "{{safenet_protectapp_installer_path}}/jce1_2_2.jar"
    - "{{safenet_protectapp_installer_path}}/commons-lang3-3.1.jar"
    - "{{safenet_protectapp_installer_path}}/jsse.jar"
    - "{{safenet_protectapp_installer_path}}/bcprov-ext-jdk15on-152.jar"
    - "{{safenet_protectapp_installer_path}}/Ingrianlog4j-api-2.1.jar"
    - "{{safenet_protectapp_installer_path}}/gson-2.1.jar"
    - "{{safenet_protectapp_installer_path}}/jcert.jar"
    - "{{safenet_protectapp_installer_path}}/Ingrianlog4j-core-2.1.jar"


#
#- name: Download the local and US export policy
#   get_url:
#     url:  "{{cryptolib_artifactory_url}}/{{item}}"
#     dest: "{{safenet_protectapp_keystore_path}}"
#   with_items:
#     - "{{safenet_protectapp_local_policy_path}}"
#     - "{{safenet_protectapp_US_export_policy_path}}"
    


#
# Configure Safenet ProtectApp Ingrian properties
#
- name: Copy IngrianNAE Properties templates
  template:
    src: IngrianNAE.properties.j2
    dest: "{{safenet_protectapp_install_path}}/IngrianNAE.properties"
    
#
# Configure Java Key Store for client cert
# Assume the client and CA certs are in PEM format
#

- name: Copy client cert
  copy:
    content: "{{safenet_dev_client_cert}}"
    dest: "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_cert}}"
    
    
- name: Copy client key
  copy:
    content: "{{safenet_dev_client_key}}"
    dest: "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_key}}"


- name: Copy client CA
  copy:
    content: "{{safenet_dev_client_CA}}"
    dest: "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_CA}}"

- name: Remote the old keystore file
  file:
    path: "{{safenet_protectapp_keystore_path}}/{{safenet_protectapp_keystore_name}}"
    state: absent
    
  
- name: Convert client cert and key into PCKS12 format
  shell: |
    openssl pkcs12 -export \
    -in "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_cert}}" \
    -inkey "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_key}}" \
    -name "{{safenet_protectapp_client_keystore_client_alias}}" \
    -out "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_cert_pcks12}}" \
    -passout pass:"{{safenet_protectapp_client_key_converstion_pwd}}"



- name: Create client Java Keystore and import the PCKS12 certs
  shell: |
    keytool -importkeystore \
    -srckeystore "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_cert_pcks12}}" \
    -destkeystore "{{safenet_protectapp_keystore_path}}/{{safenet_protectapp_keystore_name}}" \
    -srcstoretype pkcs12 \
    -srcstorepass "{{safenet_protectapp_client_key_converstion_pwd}}" \
    -deststorepass "{{safenet_protectapp_client_keystore_pwd}}" \
    -alias "{{safenet_protectapp_client_keystore_client_alias}}" \
    -noprompt
    
    
- name: Import CA cert into the Keystore
  shell: |
    keytool -importcert -trustcacerts \
    -alias "{{safenet_protectapp_client_keystore_CA_alias}}" \
    -file "{{safenet_protectapp_staging_dir}}/{{safenet_protectapp_client_CA}}" \
    -keystore "{{safenet_protectapp_keystore_path}}/{{safenet_protectapp_keystore_name}}" \
    -storepass "{{safenet_protectapp_client_keystore_pwd}}" \
    -noprompt






    
    
