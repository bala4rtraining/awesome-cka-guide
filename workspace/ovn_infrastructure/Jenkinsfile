pipeline {
    agent {
        docker {
          image 'ovn-docker.artifactory.trusted.visa.com/centos7_ovn_docker'
          label 'ovn_build'
          args '-v /sys/fs/cgroup:/sys/fs/cgroup -v /home/was/.ssh:/home/was/.ssh -v /home/was:/home/was -v /opt/app/ivy2/cache:/opt/app/ivy2/cache'
        }
    }

    stages {
        stage('Prepare') {
            steps {
                sh '''
                    git show -s --pretty=%ce > .git/committer-email
                '''
            }
        }
        stage('Validate ovn_infrastructure for YAML syntax check') {
            steps {
                ansiColor('xterm') {
                sh '''
                chmod +x -R jenkins-sh
                jenkins-sh/validateyaml.sh $PWD
                '''
               }
            }
        }
        stage('Validate ovn_infrastructure for inventory host file INI check') {
            steps {
                ansiColor('xterm') {
                sh '''
                jenkins-sh/validateINI.sh $PWD
                '''
               }
            }
         }
        stage('Unit test') {
            when { anyOf { branch 'master'; branch 'feature/OVN-*'; branch 'bugfix/OVN-*'; branch 'PR-*' } }
            steps {
                ansiColor('xterm') {
                   echo "\u001B[31mThe unit Test step for this jenkinsfile is TBD\u001B[m"
               }
            }
        }


        stage('Acceptance tests') {
            when { anyOf { branch 'master'; branch 'feature/OVN-*'; branch 'bugfix/OVN-*'; branch 'PR-*'; branch 'release-*' } }
            steps {
                ansiColor('xterm') {
                   echo "\u001B[31mThe Acceptance Test step for this jenkinsfile is TBD\u001B[m"
                }
            }
        }

        stage('Post-build steps') {
            when { anyOf { branch 'master'; branch 'feature/OVN-*'; branch 'bugfix/OVN-*'; branch 'PR-*'; branch 'release-*' } }
            steps {
               echo "\u001B[31mThere are no Post Build steps for this repository at present\u001B[m"
            }
        }

    }

    post {
        failure {
            script {
                def committer_email = readFile('.git/committer-email').trim()
                mail body: "${JOB_NAME} build number ${BUILD_NUMBER} was unsuccessful. More info at ${BUILD_URL}",
                subject: "${JOB_NAME} job: Build failed",
                to: "${committer_email}"
            }
        }
    }

}
