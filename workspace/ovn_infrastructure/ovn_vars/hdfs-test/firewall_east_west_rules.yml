---
#######
# Firewall rule is considered `east-west` only when the communication between
# the nodes does not leave the datacenter.  That is all traffic is local to the
# datacenter.
#
# East-West Firewall rules in each datacenter `dc1` and `dc2`
# This rule must be run for each datacenter inventory
# separately.
# e.g
#   .../inventories/test/dc1 and 
#   .../inventories/test/dc2
#######
east_west_firewall_rules:

# riak database
- src: "{{ groups.ovn_switch_servers + groups.ovn_mediator_servers + groups.ovn_multidc_sync + groups.ovn_umf_delivery + groups.ovn_vitalsigns_delivery + groups.nomad_client }}"
  dest: "{{ groups.ovn_riak_servers }}"
  ports:
  - port: "{{ riak_port }}"
- src: "{{ groups.ovn_riak_servers }}"
  dest: "{{ groups.ovn_riak_servers }}"
  ports:
  - port: "{{ epmd_listener_port }}"
  - port: "{{ riak_cluster_port_range }}"
  - port: "{{ riak_handoff_port }}"
  - port: "{{ dist_erlang_port_range }}"

# kafka
- src: "{{ groups.kafka + groups.ovn_switch_servers + groups.ovn_umf_delivery + groups.ovn_multidc_sync + groups.ovn_vitalsigns_delivery + groups.nomad_client }}"
  dest: "{{ groups.kafka }}"
  ports:
  - port: "{{ kafka_port }}"

# mediator
- src: "{{ groups.ovn_switch_servers }}"
  dest: "{{ groups.ovn_mediator_servers }}"
  ports:
  - port: "{{ mediator_port }}"
- src: "{{ groups.haproxy }}"
  dest: "{{ groups.ovn_mediator_servers }}"
  ports:
  - port: "{{ netiso_port }}"
- src: "{{ groups.ovn_mediator_servers }}"
  dest: "{{ groups.ovn_mediator_servers }}"
  ports:
  - port: "{{ epmd_listener_port }}"
  - port: "{{ dist_erlang_port_range }}"

# switch
- src: "{{ groups.ovn_mediator_servers + groups.ftps_server }}"
  dest: "{{ groups.ovn_switch_servers }}"
  ports:
  - port: "{{ switch_port }}"

# hsm
- src: "{{ groups.ovn_switch_servers }}"
  dest: "{{ hsm_servers }}"
  ports:
  - port: "{{ hsm_port }}"
  - port: "{{ hsm_ssl_port }}"

# zookeeper
- src: "{{ groups.kafka + groups.zookeeper + groups.hadoop_namenodes }}"
  dest: "{{ groups.zookeeper }}"
  ports:
  - port: "{{ zk_port }}"
- src: "{{ groups.zookeeper }}"
  dest: "{{ groups.zookeeper }}"
  ports:
  - port: "{{ zk_election_a_port }}"
  - port: "{{ zk_election_b_port }}"

# Kafka Mirror Maker
- src: "{{ groups.kafka_mirror_maker }}"
  dest: "{{ groups.kafka }}"
  ports:
  - port: "{{ kafka_port }}"

# graphite
- src: "{{ groups.datacenter }}"
  dest: "{{ groups.graphite }}"
  ports:
  - port: "{{ carbon_port }}"

# elasticsearch
- src: "{{ groups.datacenter }}"
  dest: "{{ groups.elasticsearch }}"
  ports:
  - port: "{{ elasticsearch_cluster_port_range }}"
- src: "{{ groups.elasticsearch }}"
  dest: "{{ groups.elasticsearch }}"
  ports:
  - port: "{{ elasticsearch_cluster_port_range }}"
  - port: "{{ zen_discovery_port }}"

# prometheus_server to all nodes for exporters
- src: "{{ groups.prometheus_server }}"
  dest: "{{ groups.datacenter }}"
  ports:
  - port: "{{ prometheus_exporter_port_range }}"

# prometheus_alertmanager
- src: "{{ groups.prometheus_alertmanager }}"
  dest: "{{ groups.prometheus_alertmanager }}"
  ports:
  - port: "{{ alertmanager_gossip_port }}"

# Between prometheus servers for federation and pushing alerts to alertmanager
- src: "{{ groups.prometheus_server + groups.grafana }}"
  dest: "{{ groups.prometheus_server }}"
  ports:
  - port: "{{ nginx_default_port }}"

# Grafana to prometheus server
- src: "{{ groups.prometheus_server }}"
  dest: "{{ groups.prometheus_alertmanager }}"
  ports:
  - port: "{{ nginx_default_port }}"

# bridge ea servers
- src: "{{ groups.ovn_mediator_servers }}"
  dest: "{{ bridge_ea_servers }}"
  ports:
  - port: "{{ bridge_ea_auth_ports }}"

- src: "{{ groups.nomad_client }}"
  dest: "{{ bridge_ea_servers }}"
  ports:
  - port: "{{ bridge_ftps_auth_port }}"
  - port: "{{ bridge_ftps_data_ports }}"

# CAS Tool
- src: "{{ groups.cas_tool }}"
  dest: "{{ groups.nomad_server }}"
  ports:
    - port: "{{ nomad_server_http_port }}"

- src: "{{ groups.cas_tool }}"
  dest: "{{ groups.kafka }}"
  ports:
    - port: "{{ kafka_port }}"
- src: "{{ groups.cas_tool }}"
  dest: "{{ groups.ovn_riak_servers }}"
  ports:
    - port: "{{ riak_port }}"

#Nomad UI
- src: "{{ groups.nomad_ui }}"
  dest: "{{ groups.nomad_server }}"
  ports:
    - port: "{{ nomad_server_http_port }}"


# Nomad internal communication between client and server
- src: "{{ groups.nomad_server + groups.nomad_client }}"
  dest: "{{ groups.nomad_server }}"
  ports:
  - port: "{{ nomad_server_http_port }}"
  - port: "{{ nomad_server_rpc_port }}"
  - port: "{{ nomad_server_serf_port }}"
- src: "{{ groups.nomad_server + groups.nomad_client }}"
  dest: "{{ groups.nomad_client }}"
  ports:
  - port: "{{ nomad_client_http_port }}"
  - port: "{{ nomad_client_rpc_port }}"

# fluentd_aggregator
- src: "{{ groups.fluentd_aggregator }}"
  dest: "{{ groups.elasticsearch }}"
  ports:
  - port: "{{ elasticsearch_rest_port }}"

# OVN VSS server log pipeline
- src: "{{ groups.ovn_vss_servers }}"
  dest: "{{ groups.fluentd_aggregator }}"
  ports:
  - port: "{{ td_agent_forward_remote_port }}"

# OVN VSS server
- src: "{{ groups.ovn_vss_servers }}"
  dest: "{{ groups.ftps_server }}"
  ports:
  - port: "{{ ssh_port }}"

# HDFS Journalnode servers
- src: "{{ groups.hadoop_namenodes }}"
  dest: "{{ groups.journalnodes }}"
  ports:
  - port: "{{ hadoop_journalnode_edits_port }}"
  - port: "{{ hadoop_journalnode_http_port }}"

# HDFS Zookeeper Client(ZKFC) servers
- src: "{{ groups.hadoop_namenodes }}"
  dest: "{{ groups.hadoop_namenodes }}"
  ports:
  - port: "{{ hadoop_zkfc_port }}"

# HDFS Namenode servers
- src: "{{ groups.hadoop_namenodes + groups.hadoop_datanodes }}"
  dest: "{{ groups.hadoop_namenodes }}"
  ports:
  - port: "{{ hadoop_namenode_http_port }}"
- src: "{{ groups.hadoop_namenodes + groups.hadoop_datanodes + groups.nomad_client }}"
  dest: "{{ groups.hadoop_namenodes }}"
  ports:
  - port: "{{ hadoop_namenode_rpc_port }}"

# HDFS Datanode servers
- src: "{{ groups.hadoop_namenodes + groups.hadoop_datanodes }}"
  dest: "{{ groups.hadoop_datanodes }}"
  ports:
  - port: "{{ hadoop_datanode_ipc_port }}"
  - port: "{{ hadoop_datanode_http_port }}"
- src: "{{ groups.hadoop_namenodes + groups.hadoop_datanodes + groups.nomad_client }}"
  dest: "{{ groups.hadoop_datanodes }}"
  ports:
  - port: "{{ hadoop_datanode_port }}"

# IDS to elasticsearch
- src: "{{ suricata_ids_server }}"
  dest: "{{ groups.elasticsearch }}"
  ports:
  - port: "{{ elasticsearch_rest_port }}"