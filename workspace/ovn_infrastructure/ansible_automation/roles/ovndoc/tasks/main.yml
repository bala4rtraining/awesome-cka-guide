---
- name: check if golang is already provisioned
  stat:
    path: "{{ golang_home }}/go"
  register: golang_provision_status

- name: provision golang "{{ golang_version }}"
  unarchive:
    src: "{{ golang_url }}"
    dest: "{{ golang_home }}"
    copy: no
    owner: 'root'
    group: 'root'
    mode: 0755
  when: golang_provision_status.stat.exists == false

- name: deploy godoc
  file:
    src: '{{ golang_home }}/go/bin/{{ item }}'
    dest: '/usr/local/bin/{{ item }}'
    owner: 'root'
    group: 'root'
    force: true
    state: link
  with_items:
    - go
    - godoc

- name: create ovndoc directory
  file:
    path: '{{ item }}'
    owner: '{{ ovndoc_user }}'
    group: '{{ ovndoc_user }}'
    mode: '755'
    state: directory
  with_items:
    - "{{ golang_home }}/ovn"
    - "{{ ovndoc_home }}"

- name: install sudoer package if not installed.
  yum:
    name: sudo
    state: present

- name: Allow was to control ovndoc lifecycle.
  template:
    src: 'was-sudoers.j2'
    dest: /etc/sudoers.d/was
    force: yes
    owner: root
    group: root
    mode: 0644

- name: Add ovndoc systemd service file.
  template:
    src: 'ovndoc.service.j2'
    dest: /etc/systemd/system/ovndoc.service
    force: yes
    owner: root
    group: root
    mode: 0644
  register: ovndoc_service_result

- name: reload system service configs.
  shell: systemctl daemon-reload
  when: ovndoc_service_result.changed == true

- name: Restart ovndoc on config change.
  service:
    name: ovndoc
    state: restarted
  when: >
    ovndoc_service_result.changed == true 
  
- name: Ensure ovndoc is started and enabled to start at boot.
  service:
    name: ovndoc
    state: started
    enabled: yes
