---
#
# install jdk first in order to install vica certs in java keystore
- name: install oracle jre if not installed
  yum:
    name: '{{ jre_version }}'
    disable_gpg_check: True
    disablerepo: '{{ spacewalk_yum_repo }}'
    state: present

# Warning: The following two tasks should not be confused with black magic.
# First, the keystore tool is executed with the -list argument. When the
# certificate is not available, it returns a non-zero error code.
# Errors are ignored but collected in the certificate_status variable.
- name: Determine which certificates already exist
  with_items: '{{ java_keystore_certificates }}'
  command: >
    keytool
    -keystore {{ java_keystore_file_path }}
    -storepass {{ java_keystore_file_password }}
    -alias {{ cert.alias }}
    -list
  loop_control:
    loop_var: cert
  register: certificate_status
  ignore_errors: true
  changed_when: false

# Now, we loop over the results of the previous check command. For each command
# executions that was not-successful, the keystore tool is executed again but
# this time with -importcert to add all non-existing certificate files.
- name: Add all certificates that are not already in the keystore
  with_items: '{{ certificate_status.results }}'
  shell: |
    openssl x509 -outform der \
      -in {{ pki_ca_trust_source_anchors }}/{{ cert.item.certificate_file | basename }} \
      -out {{ java_keystore_certificate_directory }}/{{ cert.item.certificate_file + '.cer' | basename }}

    keytool \
      -importcert -noprompt -trustcacerts \
      -keystore {{ java_keystore_file_path }} \
      -storepass {{ java_keystore_file_password }} \
      -alias {{ cert.item.alias }} \
      -file {{ java_keystore_certificate_directory }}/{{ cert.item.certificate_file + '.cer' | basename }}
  loop_control:
    loop_var: cert
  when: cert.rc != 0