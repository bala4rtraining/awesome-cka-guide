---
# Issue TLS certificate tasks file for consul
- name: Create directory to store keys and certificates
  file: >
    path={{ consul_ssl_dir }}
    owner=root
    group={{ consul_group }}
    mode=0750
    state=directory

- name: Issue certificate for Consul client TLS
  uri: >
    url={{consul_certificate_fetch_api}}
    method=POST
    return_content=yes
    HEADER_X-Vault-Token={{ bootstrap_token }}
    body="{ \"common_name\" : \"{{ consul_certificate_common_name }}\", \"ip_sans\" : \"{{ consul_ip_subject_alternative_names }}\" }"
    body_format=json
  register: consul_certificate
  when: ovn_manager_bypass is not defined
#Note: the variable 'ovn_manager_bypass' enables testing of this role without bootstrapping a management instance of Vault
#  if the variable is defined the remaining deployment will fail unless the 'vault_certificate' variable is provided

- name: Save certificate
  copy: >
    content={{ consul_certificate.json.data.certificate }}
    dest={{ consul_cert_file }}
    owner={{ consul_user }}
    group={{ consul_group }}
    mode=0644

- name: Save CA certificate
  copy: >
    content={{ consul_certificate.json.data.issuing_ca }}
    dest={{ consul_ca_file }}
    owner={{ consul_user }}
    group={{ consul_group }}
    mode=0644

- name: Save private key
  copy: >
    content={{ consul_certificate.json.data.private_key }}
    dest={{ consul_key_file }}
    owner={{ consul_user }}
    group={{ consul_group }}
    mode=0600

- name: Ensure local facts directory exists
  file: >
    path=/etc/ansible/facts.d
    recurse=no
    state=directory
    owner=root
    group=root
    mode=0755

- name: Set facts for public keying material
  set_fact:
    consul_tls:
      certificate: "{{ consul_certificate.json.data.certificate }}"
      issuing_ca: "{{ consul_certificate.json.data.issuing_ca }}"

- name: Persist facts for public keying material
  copy: >
    content='{{ consul_tls | to_nice_json }}'
    dest=/etc/ansible/facts.d/consul_facts.fact
    owner=root
    group=root
    mode=0644
