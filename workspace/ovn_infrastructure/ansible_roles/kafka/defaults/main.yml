---
# Defaults for Kafka Upgrade deployment
current_kafka_version: 0.9.0.1
upgraded_kafka_version: 0.11.0.1
tarball: "kafka_2.11-{{current_kafka_version}}"
upgraded_tarball: "kafka_2.11-{{upgraded_kafka_version}}"
artifact_url: "{{artifactory_url}}/ovn/repo/{{tarball}}.tgz"
upgraded_artifact_url: "{{artifactory_url}}/ovn/repo/{{upgraded_tarball}}.tgz"
python_module_tarball_path: "{{artifactory_url}}/ovn/repo/pypi"
artifact_md5: "b71e5cbc78165c1ca483279c27402663"
broker_id: "{{ groups['kafka'].index(inventory_hostname)+1 }}"
number_brokers: "{{ groups['kafka'] | length }}"
client_port: 9092
client_ssl_port: 9093
default_iface: "{{ ansible_default_ipv4.alias }}"
ovn_data_dir: /opt/app
kafka_username: kafka
kafka_group: kafka
kafka_install_dir: /opt/kafka
kafka_data_dir: "{{ ovn_data_dir }}/kafka"

enable_kafka_mirror_maker_ssl: false

kafka_enable_zk_client_authentication: "false"
kafka_principal_name: kafka
kafka_keytab: "{{ kerberos_keytabs_dir }}/{{ kafka_principal_name }}.keytab"
kafka_realm_name: "{{ kerberos_realm_name }}"

kafka_data_retention_hours: 720
kafka_log_dir: /var/log/kafka
kafka_mirror_maker_log_dir: /var/log/mirror_maker
syslogd_port: 10514
mirror_maker_consumer_group_id: "ovn-{{local_instance}}-replication-consumer-group"
statsd_port: 8125
zk_port: 2181
partition_factor: 1
replication_factor: "{{ [3, (number_brokers | int)] | min}}"
tmp_insync_replicas: "{{ [1, (number_brokers | int) - 1] | max }}"
min_insync_replicas: "{{ [2, (tmp_insync_replicas | int)] | min }}"
zookeeper_members: |
          {% set join = joiner(",") %}
          {% for item in groups['zookeeper'] -%}
          {% if kafka_enable_zk_client_authentication == "true" -%}
            {{ join() }}{{ hostvars[item]['ansible_nodename'] }}:{{ zk_port }}
          {%- else -%}
            {{ join() }}{{ hostvars[item]['ansible_'+default_iface]['ipv4']['address'] }}:{{ zk_port }}
          {%- endif %}
          {%- endfor %}
zookeeper_default_member: |
          {% if kafka_enable_zk_client_authentication == "true" -%}
            {{ hostvars[groups['zookeeper'][0]]['ansible_nodename'] }}:{{ zk_port }}
          {%- else -%}
            {{ hostvars[groups['zookeeper'][0]]['ansible_'+default_iface]['ipv4']['address'] }}:{{ zk_port }}
          {%- endif %}
kafka_members: |
          {% set join = joiner(",") %}
          {% for item in groups['kafka'] -%}
          {% if enable_kafka_mirror_maker_ssl == false -%}
            {{ join() }}{{ hostvars[item]['ansible_'+default_iface]['ipv4']['address']}}:{{client_port}}
          {%- else -%}
            {{ join() }}{{ hostvars[item]['ansible_'+default_iface]['ipv4']['address']}}:{{kafka_ssl_port}}
          {%- endif %}
          {%- endfor %}


kafka_keystore_root: /etc/pki/tls/kafka/ks
kafka_mirror_maker_keystore_root: /etc/pki/tls/kafkamirrormaker/ks

monitor_kafka_using_prometheus: "true"

pykafka_pyi:
  - six-1.11.0.tar.gz
  - tabulate-0.8.2.tar.gz
  - kazoo-2.4.0.tar.gz
  - pykafka-2.7.0.dev2.tar.gz

#for certificate copying
kafka_cert_root: "/etc/pki/tls/kafka/"
kafka_cert_path: "{{ kafka_cert_root }}/certs"
kafka_key_path:  "{{ kafka_cert_root }}/key"
kafka_cert_name: "kafka-cert-{{ inventory_hostname }}.pem"
kafka_key_name: "kafka-key-{{ inventory_hostname }}.pem"
kafka_ca_name: "kafka-ca.pem"


#for creating  truststore and keystore
kafka_keystore_file_name: "server.keystore"
kafka_truststore_file_name: "server.truststore"
kafka_server_keystore_location: "{{ kafka_keystore_root }}/{{ kafka_keystore_file_name }}"
kafka_server_truststore_location: "{{ kafka_keystore_root }}/{{ kafka_truststore_file_name }}"
kafka_truststore_ca:
  - {cert: '{{ kafka_cert_path }}/{{ kafka_ca_name }}', alias: 'ca'}

enable_kafka_ssl: false
enable_kafka_acl: false

kafka_acls:
  - "--add --allow-principal User:\"CN=kafka-client,O=Visa-inc,ST=CA,C=US\"  --operation Read --operation Write --topic test-acl"
  - "--add --allow-principal User:\"CN=kafka-client,O=Visa-inc,ST=CA,C=US\"  --operation Read --operation Write --topic test-acl"

#for certificate copying - mirror maker
kafka_mirror_maker_cert_root: "/etc/pki/tls/kafkamirrormaker/"
kafka_mirror_maker_cert_path: "{{ kafka_mirror_maker_cert_root }}/certs"
kafka_mirror_maker_key_path:  "{{ kafka_mirror_maker_cert_root }}/key"
kafka_mirror_maker_cert_name: "kafka-mirrormaker-cert-{{ inventory_hostname }}.pem"
kafka_mirror_maker_key_name: "kafka-mirrormaker-key-{{ inventory_hostname }}.pem"
kafka_mirror_maker_ca_name: "kafka-mirrormaker-ca.pem"

#for creating  truststore and keystore - mirror maker
kafka_mirror_maker_keystore_file_name: "mirrormaker.keystore"
kafka_mirror_maker_truststore_file_name: "mirrormaker.truststore"
kafka_mirror_maker_server_keystore_location: "{{ kafka_mirror_maker_keystore_root }}/{{ kafka_mirror_maker_keystore_file_name }}"
kafka_mirror_maker_server_truststore_location: "{{ kafka_mirror_maker_keystore_root }}/{{ kafka_mirror_maker_truststore_file_name }}"
kafka_mirror_maker_truststore_ca:
  - {cert: '{{ kafka_mirror_maker_cert_path }}/{{ kafka_mirror_maker_ca_name }}', alias: 'ca'}
