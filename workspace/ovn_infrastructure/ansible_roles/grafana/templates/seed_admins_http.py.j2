{# Python script to initially seed admin users (in grafana_auth.yml playbook) in Grafana as GrafanaAdmins #}

import httplib
import urllib
import json
import sys

admin_user = "{{grafana_admin_user}}"
admin_pass = "{{grafana_admin_pass}}"

seed_admins = []

{% for item in grafana_auth_proxy_seed_admins %}
seed_admins.append("{{item}}")
{% endfor %}

grafana_port = "{{grafana_port}}"
grafana_host = "127.0.0.1"
grafana_url = "%s:%s" % (grafana_host,grafana_port)

create_user_url = "/api/admin/users"
change_permission_url = "/api/admin/users/%s/permissions"
get_users_url = "/api/users"

header = {"X-WEBAUTH-USER":admin_user, "Content-Type":"application/json"}

conn = httplib.HTTPConnection(grafana_url)
conn.request("GET", get_users_url, "", header)
response = conn.getresponse()
data = response.read()

if response.status != 200:
    print(data)
    sys.exit()

users = json.loads(data)

conn.close()

for username in seed_admins:
    user_id = -1
    for user in users:
        if user["login"] == username:
            user_id = user["id"]
            break

    if user_id == -1:
        user_data = {'name':username,'email':username+'@visa.com','login':username,'password':admin_pass}
        conn = httplib.HTTPConnection(grafana_url)
        conn.request("POST", create_user_url, json.dumps(user_data), header)
        response = conn.getresponse()
        data = response.read()
        user_json = json.loads(data)
        conn.close()
        user_id = user_json["id"]

    admin_permission = {"isGrafanaAdmin":True}
    conn = httplib.HTTPConnection(grafana_url)
    conn.request("PUT", change_permission_url % user_id, json.dumps(admin_permission), header)
    response_admin = conn.getresponse()
    data = response_admin.read()
    res_admin_json = json.loads(data)
    print(username + " " + res_admin_json['message'])
    conn.close()
