---
hostname: "localhost"
ovn_mp:
    listen-address: :9001
name: goovnt
hdfs:
    namenodes:
     {% for item in groups['hadoop_namenodes'] %}
      - {{ hostvars[item].inventory_hostname }}:{{ hadoop_namenode_rpc_port }}
     {% endfor %}

    perm: 766
    username: hdfs
    delivery-directory: "{{delivery_directory}}"
    collection-directory: "{{collection_directory}}"
    collection-output-directory: "{{collection_output_directory}}"
kafka:
    broker: "{{ goovnt_brokers }}"
    topic: "{{ goovnt_topics }}"
    produce_offset_report: {{  goovnt_offset_report }}
    request_required_acks: {{  goovnt_request_required_acks }}
    queue_buffering_max_ms: {{  goovnt_queue_buffering_max_ms }}
    api_version_request: {{  goovnt_api_version_request }}
kafkaConsumer:
    brokers: "{{ goovnt_brokers }}"
    topics: "{{ goovnt_topics }}"
    group: "goovnt_bcm_consumer_group"
    session_timeout:  6000
    events_channel_enable: true
    application_rebalance_enable: true
nomad:
    urls:
     - "http://{{nomadserver}}:{{nomad_port}}"
    beaFetchJobScript: "/tmp/bridge_ea_fetch.nomad"
    collectionJobScript: "/tmp/cfprocessor.nomad"
    nomadClients:
     {% for item in groups['nomad_client'] %}
      - {{ hostvars[item].inventory_hostname }}:{{ ssh_port }}
     {% endfor %}

crypto:
    dek_path: {{ crypto_dek_path}}
    salt: {{ crypto_salt }}
    iv: {{ crypto_iv }}
logger:
    level: "warn"
    development: true
    disable-caller: false
    disable-stacktrace: false
    encoder-config:
    message-key: msg
    level-key: level
    time-key: ts
    name-key: logger
    caller-key: src
    stacktrace-key: stacktrace
    line-ending: "\n"
    level-encoder: lowercase
    time-encoder: iso8601
    duration-encoder: seconds
    caller-encoder: short
output-paths:
  - fluent
error-output-paths:
  - stderr
ftps:
    clientEA: "{{client_ea_ip}}:{{ftps_auth_port}}"
    bridgeEA: "{{bridge_ea_ip}}:{{ftps_auth_port}}"
    user: "{{bridge_ftps_user}}"
    pass: "{{bridge_ftps_password}}"
ftpproxy:
    localport: 2120
    targetServer : "{{bridge_ea_ip}}:{{ftps_auth_port}}"
    user: "{{bridge_ftps_user}}"
    pass: "{{bridge_ftps_password}}"
    CertPath: "certs/"
    certFile: "cert.pem"
    keyFile: "key.pem"
    caFiles: 
        - "CA/rootCA.pem"
        - "CA/subCA.pem"
    debug: false
ftpproxy_bridgeea:
    localport: 2121
    targetServer : "{{client_ea_ip}}:{{ftps_auth_port}}"
    user: "{{bridge_ftps_user}}"
    pass: "{{bridge_ftps_password}}"
    CertPath: "certs/"
    certFile: "cert.pem"
    keyFile: "key.pem"
    caFiles: 
        - "CA/rootCA.pem"
        - "CA/subCA.pem"
    debug: false
