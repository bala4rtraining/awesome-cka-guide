---
- set_fact:
    arch: linux_amd64
  when: ansible_system == "Linux"

- set_fact:
    arch: darwin_amd64
  when: ansible_system == "Darwin"

- name: Create consul group
  group:
    name: "{{consul.group}}"
    system: yes
    state: present

- name: Create consul user
  user:
    name: "{{consul.user}}"
    group: "{{consul.group}}"
    system: yes
    home: "{{dir.home}}"
    shell: /bin/false
    state: present

- name: Ensures consul data directory exists for consul client
  file:
    path: "{{dir.data.client}}"
    state: directory
    owner: "{{consul.user}}"
    group: "{{consul.group}}"
    mode: 0700
    recurse: yes
  when: consul_mode_is_server == false

  
- name: Unpacks Consul to location
  unarchive:
    src: "{{ dir.download }}"
    dest: "{{ dir.install }}"
    copy: no
    owner: "{{ consul.user }}"
    group: "{{ consul.group }}"
    mode: 0750


- name: Create directory for consul configuration files
  file:
    path: "{{dir.config}}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Create directory for consul SSL certs
  file:
    path: "{{dir.config}}/ssl"
    owner: root
    group: root
    mode: 0755
    state: directory



- name: copy certificate to config directory
  copy:
    content: "{{ovn_consul_tls_cert}}"
    dest: "{{dir.config}}/ssl/consul.crt"
    owner: "{{consul.user}}"
    group: "{{consul.group}}"
    mode: 0600

# TODO: This private key needs to better protected
- name: copy key file to config directory
  copy:
    content: "{{ovn_consul_tls_key}}"
    dest: "{{dir.config}}/ssl/consul.key"
    owner: "{{consul.user}}"
    group: "{{consul.group}}"
    mode: 0600

- name: copy ca cert file to config directory
  copy:
    content: "{{ovn_vault_consul_tls_ca_cert}}"
    dest: "{{dir.config}}/ssl/root.pem"
    owner: "{{consul.user}}"
    group: "{{consul.group}}"
    mode: 0600

- name: Consul configuration file
  template: >
    src=consul.json.j2
    dest={{dir.config}}/consul.json
    owner={{ consul.user }}
    group={{ consul.group }}
    mode=0600
  notify: 
    - restart consul

#
# RHEL 7 specific
#
- include: service.rh7.yml

- name: Ensure consul server data dir exists
  file:
    path: "{{dir.data.server}}"
    owner: "{{consul.user}}"
    group: "{{consul.group}}"
    mode: 0700
    state: directory
    recurse: yes
  when: consul_mode_is_server

- include: gossip_encryption.yml

- name: Ensure Consul service is started and enabled at boot
  service:
    name: consul
    state: started
    enabled: yes
