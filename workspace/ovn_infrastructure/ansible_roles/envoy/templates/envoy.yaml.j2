---
listeners:
- name: admin
  address: tcp://0.0.0.0:{{ envoy_service_admin_port }}
  filters:
  - name: http_connection_manager
    config:
      codec_type: auto
      stat_prefix: ingress_admin_http
      route_config:
        virtual_hosts:
        - name: admin
          domains:
          - "*"
          routes:
{% for name in envoy_ingress_services %}
          - prefix: /{{ name }}/
            cluster: local_{{ name }}_admin
            prefix_rewrite: /
{% endfor %}
          - prefix: /envoy/metrics
            cluster: local_envoy_metrics
            prefix_rewrite: /metrics
      filters:
      - name: router
        config: {}
      access_log:
      - path: "{{ envoy_service_admin_access_log_path }}"
- name: ingress
  address: tcp://0.0.0.0:{{ envoy_service_ingress_port }}
  filters:
  - name: http_connection_manager
    config:
      codec_type: auto
      stat_prefix: ingress_http
      route_config:
        virtual_hosts:
{% for name in envoy_ingress_services %}
        - name: {{ name }}
          domains:
          - "{{ name }}"
          routes:
          - prefix: "/"
            cluster: local_{{ name }}
            timeout_ms: 0
{% endfor %}
      filters:
      - name: health_check
        config:
          pass_through_mode: false
          endpoint: /healthcheck
      - name: router
        config: {}
      access_log:
      - path: "{{ envoy_service_ingress_access_log_path }}"
{% if "tls" in envoy_services[envoy_ingress_services[0]].use %}
  ssl_context:
    cert_chain_file: "/etc/pki/tls/certs/{{ envoy_cert_name }}"
    private_key_file: "/etc/pki/tls/private/{{ envoy_key_name }}"
    alpn_protocols: "h2"
    ca_cert_file: "/etc/pki/tls/certs/{{ envoy_ca_cert_name }}"
    require_client_certificate: true
    verify_certificate_hash: "{{ envoy_cert_hash }}"
    cipher_suites: "{{ envoy_cipher_suites }}"
{% endif %}
- name: egress
  address: tcp://127.0.0.1:{{ envoy_service_egress_port }}
  filters:
  - name: http_connection_manager
    config:
      codec_type: auto
      stat_prefix: egress_http
      route_config:
        virtual_hosts:
{% for name in envoy_services %}
        - name: {{ name }}
          domains:
          - "{{ name }}"
          routes:
          - prefix: "/"
            cluster: remote_{{ name }}
            timeout_ms: 0
{% endfor %}
      filters:
      - name: grpc_http1_bridge
        config: {}
      - name: router
        config: {}
      access_log:
      - path: "{{ envoy_service_egress_access_log_path }}"
admin:
  access_log_path: "{{ envoy_admin_access_log_path }}"
  address: tcp://0.0.0.0:{{ envoy_admin_port }}
cluster_manager:
  clusters:
{% for name in envoy_ingress_services %}
  - name: local_{{ name }}
    type: static
    connect_timeout_ms: 250
    lb_type: round_robin
{% if "http2" in envoy_services[name].use %}
    features: http2
{% endif %}
    hosts:
    - url: tcp://127.0.0.1:{{ envoy_services[name].local_port }}
  - name: local_{{ name }}_admin
    type: static
    connect_timeout_ms: 250
    lb_type: round_robin
    hosts:
    - url: tcp://127.0.0.1:{{ envoy_services[name].local_admin_port }}
{% endfor %}
  - name: local_envoy_metrics
    type: static
    connect_timeout_ms: 250
    lb_type: round_robin
    hosts:
    - url: tcp://127.0.0.1:{{ statsd_exporter_port }}
{% for name, service in envoy_services.iteritems() %}
  - name: remote_{{ name }}
    type: static
    connect_timeout_ms: 250
    lb_type: {{ envoy_service_lb_type }}
{% if "http2" in service.use %}
    features: http2
{% endif %}
    hosts:
{% for host in groups[service.group_name] %}
    - url: tcp://{{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:{{ envoy_service_ingress_port }}
{% endfor %}
{% if "tls" in envoy_services[name].use %}
    ssl_context:
      alpn_protocols: "h2"
      cert_chain_file: "/etc/pki/tls/certs/{{ envoy_cert_name }}"
      private_key_file: "/etc/pki/tls/private/{{ envoy_key_name }}"
      ca_cert_file: "/etc/pki/tls/certs/{{ envoy_ca_cert_name }}"
      verify_certificate_hash: "{{ envoy_cert_hash }}"
      cipher_suites: "{{ envoy_cipher_suites }}"
{% endif %}
    health_check:
      type: http
      timeout_ms: 2000
      interval_ms: 5000
      unhealthy_threshold: 1
      healthy_threshold: 1
      path: "/healthcheck"
    outlier_detection:
      consecutive_5xx: 3
      interval_ms: 10000
      base_ejection_time_ms: 30000
      max_ejection_percent: 32
      success_rate_minimum_hosts: 2
{% endfor %}
statsd_udp_ip_address: 127.0.0.1:{{ envoy_statsd_port }}
stats_flush_interval_ms: 5000
