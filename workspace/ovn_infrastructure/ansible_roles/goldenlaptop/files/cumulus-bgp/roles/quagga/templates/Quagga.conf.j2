{% set intvars = interfaces[ansible_hostname] -%}

{# BGP log file #}
log file /var/log/quagga/ovn-bgp.log


{# Unnumbered interfaces #}
!
{% for neighbor in intvars.neighbors %}
interface {{ neighbor }}
 no ipv6 nd suppress-ra
 ipv6 nd ra-interval 3
!
{% endfor %}

{# ASN and router ID #}
router bgp {{ intvars.asn }}
    bgp router-id {{ intvars.loopback }}
    network {{ intvars.loopback }}/32
    bgp default show-hostname
    #bgp network import-check exact

    
{# Network prefixes of this switch#}
{% for net in networks %}
{% if ansible_hostname in networks[net].source  %}
    network {{ networks[net].network }}
{% endif %}
{% endfor %}


    maximum-paths 64
    bgp bestpath as-path multipath-relax
    bgp bestpath compare-routerid
    neighbor fabric peer-group
    neighbor fabric description Internal Fabric Network
    neighbor fabric capability extended-nexthop
    neighbor fabric advertisement-interval 0
    neighbor fabric timers 1 3
    neighbor fabric timers connect 3
    neighbor fabric remote-as external
    neighbor fabric prefix-list dc-fabric-in in
    neighbor fabric prefix-list dc-fabric-out out


{% if ansible_hostname == "ovn-border-leaf1" or ansible_hostname == "ovn-border-leaf2"  %}
    network 0.0.0.0
{% endif %}


{# Neighbor interfaces of this switch #}
{% for neighbor in intvars.neighbors %}
    neighbor {{ neighbor }} interface
    neighbor {{ neighbor }} peer-group fabric
{% if ansible_hostname == "ovn-border-leaf1" or ansible_hostname == "ovn-border-leaf2"  %}
    neighbor {{neighbor}} allowas-in 2
{% endif %}
{% endfor %}
!




address-family ipv6 unicast
  neighbor fabric activate
{% for neighbor in intvars.neighbors %}
  neighbor {{ neighbor }} activate
{% endfor %}


!


exit-address-family
!
ip prefix-list dc-fabric-in seq 10 permit 0.0.0.0/0
ip prefix-list dc-fabric-in seq 20 permit 10.0.0.0/24 le 32


{# Permit other networks in the same cluster #}
{% for net in networks %}
{% if ansible_hostname not in networks[net].source  %}
ip prefix-list dc-fabric-in seq {{ loop.index*10 + 100 }} permit {{ networks[net].network }}
{% endif %}
{% endfor %}


ip prefix-list dc-fabric-in seq 500 deny any

{% if ansible_hostname != "ovn-leaf1" and ansible_hostname != "ovn-leaf2" and ansible_hostname != "ovn-leaf3" %}
ip prefix-list dc-fabric-out seq 10 permit 0.0.0.0/0
{% endif %}



{% for net in networks %}
{% if not intvars.get('networks', None) or (ansible_hostname in networks[net].source)  %}
ip prefix-list dc-fabric-out seq {{ loop.index*10 + 100 }} permit {{ networks[net].network }}
{% endif %}
{% endfor %}
ip prefix-list dc-fabric-out seq 500 deny any
!

{# The default route on the border leaf #}
{% if ansible_hostname == "ovn-border-leaf1"  %}
ip route 0.0.0.0/0 10.16.200.201
{% endif %}

{% if ansible_hostname == "ovn-border-leaf2"  %}
ip route 0.0.0.0/0 10.16.200.205
{% endif %}
