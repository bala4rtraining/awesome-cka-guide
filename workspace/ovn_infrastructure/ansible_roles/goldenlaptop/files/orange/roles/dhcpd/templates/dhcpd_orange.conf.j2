#############################################
# DHCP Server Configuration template for 
# orange server to serve regular ovn nodes
#

#############################################
{% set servars = servers[ansible_hostname] %}
{% set nodevars = nodes[ansible_hostname] %}

#
# For PXEboot 
#

option space pxelinux;
option pxelinux.magic code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option pxelinux.reboottime code 211 = unsigned integer 32;
option architecture-type code 93 = unsigned integer 16;


#
# For DNS
#
ddns-updates on;
ddns-update-style interim;
update-static-leases on;
authoritative;

allow unknown-clients;
use-host-decl-names on;
default-lease-time {{ default_lease_time}}; 
max-lease-time {{ max_lease_time }}; 
log-facility {{ log_facility}};


#
# TODO: store the secret in Vault
#
key "rndc-key" {
        algorithm hmac-md5;
        secret "r3n/ItrXC3JAeGhH/cnLfQ==";
};



#
# zone definitions
#

zone {{servars.dns_zone_forward}}. {
     primary localhost; # This is the primary server for the zone
     key rndc-key;
}

zone {{servars.dns_zone_reverse}}. {
     primary localhost;
     key rndc-key;
}



#
# local subnet
#
subnet {{ servars.subnet }} netmask {{ servars.subnet_mask }} {

  option routers {{ servars.subnet_router }};
  range {{servars.subnet_range}};
  next-server {{ servars.subnet_router }};

  #
  # For DNS
  #
  option domain-name-servers {{servars.subnet_int_ip}};
  option domain-name "{{servars.dns_zone_forward}}";

  ddns-domainname "{{servars.dns_zone_forward}}.";
  ddns-rev-domainname "in-addr.arpa.";
  
  class "pxeclients" {
      match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      next-server {{ servars.subnet_int_ip }};

      if option architecture-type = 00:07 {
        #filename "uefi/shim.efi";
	filename "uefi/grubx64.efi";
      } else {
	filename "pxelinux/pxelinux.0";
      }
  }
}



#
#
# The following is a list of pre-known
# server MAC addresses that need dhcp
# assignment in this rack. Orange is NOT
# in this list
#

{% for node in nodevars.subnet_servers %}
{% set str = node.split(';') %}

host {{ str[1] }} {
  hardware ethernet   {{ str[0] }};
  option host-name    "{{ str[1] }}";
}

{% endfor %}


#
# For OCW M2 Lab Test
#

host ovn-node-ocw-1-1 {
  hardware ethernet   50:65:f3:87:e0:80;
  option host-name    "ovn-node-1-1";
}