---
#==============================================================================#
#
# Deprecation warning: This file has been moved to new repository. Do not modify this copy.
#
# Please see: https://stash.trusted.visa.com:7990/projects/OP/repos/ovn_app_infrastructure/browse
#
#==============================================================================#

#create cas_tool user if not exist already
- name: create cas_tool user group
  group: name={{ cas_tool_username }}  state=present

- name: create cas_tool user
  user:
    name: "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    createhome: no
    comment: "CAS Tool User"
    state: present

#stop the service if it exists
- name: get the service status
  shell: service cas-tools-server status warn=false
  register: _service_status
  failed_when: _service_status.rc != 0 and ("unrecognized service" not in _service_status.stderr)
  ignore_errors: true

- name: stop the service if it exists and is running
  service: name=cas-tools-server state=stopped
  when: cas_tool_server and _service_status.rc == 0

#Create relevant directories
- name: create cas_tool installation directory for server
  file:
    path: "{{ cas_tool_server_install_dir }}"
    state: directory
    recurse: no
    owner: "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    mode: "0755"

- name: create cas_tool installation directory for cli
  file:
    path: "{{ cas_tool_cli_install_dir }}"
    state: directory
    recurse: no
    owner: "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    mode: "0755"

# Install CA certificates for CAS, if scheme == "https". // TODO: integrate with certificate role
- name: install ca certs
  copy:
    content: "{{ item.key }}"
    dest: "{{ cas_tool_cert_location }}/{{ item.name }}"
    owner: "{{ cas_tool_username }}"
    group: "{{ cas_tool_groupname }}"
    mode: 0600
  with_items: 
  - "{{ cas_tool_root_ca_certs }}"
  - "{{ cas_tool_client_ca_certs }}"
  when: cas_tool_scheme == "https"

#Download tar.gz from artifactory
- name: download and unarchive cas_tools tarball from artifactory
  unarchive:
    src: "{{ cas_tool_tar_location }}"
    dest: "{{ cas_tool_server_install_dir }}/.."
    owner:  "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    copy: no

- name: "copy server executable"
  command: "cp {{ cas_tool_server_install_dir }}/../cas-tools-server {{ cas_tool_server_install_dir }}"
  when: cas_tool_server

- name: "copy cli executable"
  command: "cp {{ cas_tool_server_install_dir }}/../cas-tools-cli {{ cas_tool_cli_install_dir }}"
  when: not cas_tool_server

- name: cas_tool server properties
  template:
    src: cas-tools.yaml.j2
    dest: "{{ cas_tool_server_install_dir }}/cas-tools.yaml"
    owner: "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    mode: "0644"
  when: cas_tool_server
  notify: restart cas-tools-server

- name: cas_tool client properties
  template:
    src: cas-tools.yaml.j2
    dest: "{{ cas_tool_cli_install_dir }}/cas-tools.yaml"
    owner: "{{ cas_tool_username }}"
    group: "{{ cas_tool_username }}"
    mode: "0644"
  when: not cas_tool_server

- name: cas-tools server systemd configuration
  template:
    src: cas-tools.server.service.j2
    dest: /etc/systemd/system/cas-tools-server.service
    owner: root
    group: root
    mode: "0644"
  when: cas_tool_server
  
- name: reload systemd configuration
  command: systemctl daemon-reload

- name: start cas_tool server
  service: name=cas-tools-server enabled=yes state=started
  when: cas_tool_server