<?xml version="1.0"?>
<!--
{{ ansible_managed }}

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

        <!-- Datanode related properties -->

        <property>
                <name>dfs.datanode.address</name>
{% if hadoop_enable_kerberos == true %}
                <value>0.0.0.0:{{ hadoop_datanode_secure_port }}</value>
{% else %}
                <value>0.0.0.0:{{ hadoop_datanode_port }}</value>
{% endif %}
        </property>

        <property>
                <name>dfs.datanode.http.address</name>
{% if hadoop_enable_kerberos == true %}
                <value>0.0.0.0:{{ hadoop_datanode_http_secure_port }}</value>
{% else %}
                <value>0.0.0.0:{{ hadoop_datanode_http_port }}</value>
{% endif %}
        </property>

{% if hadoop_enable_tls == true %}
        <property>
                <name>dfs.datanode.https.address</name>
                <value>0.0.0.0:{{ hadoop_datanode_https_port }}</value>
        </property>
{% endif %}

        <property>
                <name>dfs.data.dir</name>
                <value>file://{{hadoop_data_directory}}/dfs/data</value>
        </property>

        <!-- Namenode related properties -->

        <property>
                <name>dfs.name.dir</name>
                <value>file://{{hadoop_data_directory}}/dfs/name</value>
        </property>

        <property>
                <name>dfs.nameservices</name>
                <value>{{ hadoop_cluster_name }}</value>
        </property>

        <property>
                <name>dfs.ha.namenodes.{{ hadoop_cluster_name }}</name>
                <value>{% for item in groups['hadoop_namenodes'] -%}
                       {{ hostvars[item].ansible_nodename }}{% if not loop.last %},{% endif %}
                        {%- endfor %}</value>
        </property>

{% for item in groups['hadoop_namenodes'] %}
        <property>
                 <name>dfs.namenode.rpc-address.{{ hadoop_cluster_name }}.{{ hostvars[item].ansible_nodename }}</name>
                <value>{{ hostvars[item].ansible_nodename }}:{{ hadoop_namenode_rpc_port }}</value>
        </property>

        <property>
                <name>dfs.namenode.http-address.{{ hadoop_cluster_name }}.{{ hostvars[item].ansible_nodename }}</name>
                <value>{{ hostvars[item].ansible_nodename }}:{{ hadoop_namenode_http_port }}</value>
        </property>

        {% if hadoop_enable_tls == true %}
        <property>
                <name>dfs.namenode.https-address.{{ hadoop_cluster_name }}.{{ hostvars[item].ansible_nodename }}</name>
                <value>{{ hostvars[item].ansible_nodename }}:{{ hadoop_namenode_https_port }}</value>
        </property>
        {% endif %}

{% endfor %}

        <property>
                <name>dfs.namenode.shared.edits.dir</name>
                <value>qjournal://{% for item in groups['journalnodes'] -%}
                        {{hostvars[item].ansible_nodename}}:{{ hadoop_journalnode_edits_port }}{% if not loop.last %};{% endif %}
                        {%- endfor %}/{{ hadoop_cluster_name }}</value>
        </property>

        <!-- Journalnode related properties -->
        
        <property>
                <name>dfs.journalnode.http-address</name>
                <value>0.0.0.0:{{ hadoop_journalnode_http_port }}</value>
        </property>

{% if hadoop_enable_tls == true %}
        <property>
                <name>dfs.journalnode.https-address</name>
                <value>0.0.0.0:{{ hadoop_journalnode_https_port }}</value>
        </property>
{% endif %}

        <property>
                 <name>dfs.journalnode.edits.dir</name>
                 <value>{{ dfs_journalnode_edits_dir }}</value>
        </property>

        <!-- Failover related properties -->

        <property>
                 <name>dfs.client.failover.proxy.provider.{{ hadoop_cluster_name }}</name>
                 <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
        </property>

        <property>
                <name>dfs.ha.fencing.methods</name>
                <value>sshfence
                        shell(/bin/true)</value>
        </property>

        <property>
                 <name>dfs.ha.automatic-failover.enabled</name>
                 <value>true</value>
        </property>

        <!-- File discripters fine tunning parameters follows here -->

        <property>
        <description>Specifies the maximum number of threads to use for transferring data in and out of the DN.</description>
                <name>dfs.datanode.max.transfer.threads</name>
                <value>4096</value>
        </property>

        <property>
        <description>The number of server threads for the datanode.</description>
                <name>dfs.datanode.handler.count</name>
                <value>10</value>
        </property>

        <property>
                <name>dfs.datanode.directoryscan.threads</name>
                <value>1</value>
        </property>

        <property>
        <description>The number of server threads for the namenode.</description>
                <name>dfs.namenode.handler.count</name>
                <value>10</value>
        </property>

{% if hadoop_enable_kerberos == true %}
        <!-- Kerberos related properties -->

        <property>
                <name>dfs.block.access.token.enable</name>
                <value>true</value>
        </property>

        <!-- NameNode -->

        <property>
                <name>dfs.namenode.keytab.file</name>
                <value>{{ hadoop_namenode_keytab_path }}</value>
        </property>
        <property>
                <name>dfs.namenode.kerberos.principal</name>
                <value>hdfs/_HOST@{{ kerberos_realm_name }}</value>
        </property>
        <property>
                <name>dfs.namenode.kerberos.internal.spnego.principal</name>
                <value>HTTP/_HOST@{{ kerberos_realm_name }}</value>
        </property>

        <property>
                <name>dfs.namenode.kerberos.principal.pattern</name>
                <value>*</value>
        </property>

        <!-- JournalNode -->

        <property>
                <name>dfs.journalnode.keytab.file</name>
                <value>{{ hadoop_journalnode_keytab_path }}</value>
        </property>

        <property>
                <name>dfs.journalnode.kerberos.principal</name>
                <value>hdfs/_HOST@{{ kerberos_realm_name }}</value>
        </property>
        
        <property>
                <name>dfs.journalnode.kerberos.internal.spnego.principal</name>
                <value>HTTP/_HOST@{{ kerberos_realm_name }}</value>
        </property>
        
        <!-- DataNode -->

        <property>
                <name>dfs.datanode.keytab.file</name>
                <value>{{ hadoop_datanode_keytab_path }}</value>
        </property>
        
        <property>
                <name>dfs.datanode.kerberos.principal</name>
                <value>hdfs/_HOST@{{ kerberos_realm_name }}</value>
        </property>

        <!-- Web Authentication -->

        <property>
                <name>dfs.webhdfs.enabled</name>
                <value>true</value>
        </property>

        <property>
                <name>dfs.web.authentication.kerberos.principal</name>
                <value>HTTP/_HOST@{{ kerberos_realm_name }}</value>
        </property>

        <property>
                <name>dfs.web.authentication.kerberos.keytab</name>
                <value>{{ hadoop_web_keytab_path }}</value>
        </property>
{% endif %}

{% if hadoop_enable_tls == true %}
        <!-- Hadoop TLS and data in motion encryption related properties -->

        <property>
                <name>dfs.https.enable</name>
                <value>true</value>
        </property>

        <property>
                <name>dfs.http.policy</name>
                <value>HTTPS_ONLY</value>
        </property>

        <property>
                <name>dfs.encrypt.data.transfer</name>
                <value>true</value>
        </property>

        <property>
                <name>dfs.encrypt.data.transfer.algorithm</name>
                <value>3des</value>
        </property>

        <property>
                <name>dfs.encrypt.data.transfer.cipher.suites</name>
                <value>AES/CTR/NoPadding</value>
        </property>

        <property>
                <name>dfs.encrypt.data.transfer.cipher.key.bitlength</name>
                <value>128</value>
        </property>

        <property>
                <name>dfs.block.access.token.enable</name>
                <value>true</value>
        </property>

{% endif %}

</configuration>
