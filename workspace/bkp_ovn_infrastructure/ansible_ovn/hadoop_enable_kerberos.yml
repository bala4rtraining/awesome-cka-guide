# Playbook to enable TLS 1.2 for hdfs cluster.
# Assumption: hdfs cluster is already installed.
# Pass hadoop_enable_kerberos = True to enable kerberos on cluster.
---
- include: ../ovn_vars.yml ovn_vars_hosts=hdfs_HA_All_nodes

# stop hadoop services in specific order
- name:  stop all hadoop services
  hosts: hdfs_HA_All_nodes:!zookeeper
  roles:
    - { role: hadoop, dispatch: ['stop-all'], when: hadoop_enable_kerberos == true }

# install unlimited strength jce policy
- name: install jce policy on all cluster nodes
  hosts: hdfs_HA_All_nodes
  roles:
    - { role: java, dispatch: ['enable-crypto'], when: hadoop_enable_kerberos == true }

# install and configure kerberos_client
- name: install and kerberos_client on all cluster nodes
  hosts: hdfs_HA_All_nodes:!zookeeper
  roles:
    - { role: kerberos, dispatch: ['kerberos_client'], when: hadoop_enable_kerberos == true }
  vars:
    - kerberos_keytab_owner: "{{ hdfs_user }}"
    - kerberos_keytab_group: "{{ hdfs_group }}"
    - kerberos_merged_keytab: "{{ hadoop_merged_keytab }}"
    - kerberos_principal_names:
      - HTTP
      - hdfs

# update hadoop configuration files (core-site.xml and hdfs-site.xml)
- name: update config on all hdfs nodes (NN, DN, JN)
  hosts: hdfs_HA_All_nodes:!zookeeper
  roles:
    - { role: hadoop, dispatch: ['update-config'], when: hadoop_enable_kerberos == true }

# start hadoop cluster
- name:  start all hadoop services
  hosts: hdfs_HA_All_nodes:!zookeeper
  roles:
    - { role: hadoop, dispatch: ['start-all'], when: hadoop_enable_kerberos == true }
