---
- include: ../ovn_vars.yml ovn_vars_hosts=localhost

#==============================================================================#
#
# Deprecation warning: This file has been moved to new repository. Do not modify this copy.
#
# Please see: https://stash.trusted.visa.com:7990/projects/OP/repos/ovn_app_infrastructure/browse
#
#==============================================================================#

- name: Fail when allow_ovninfra_playbook is not defined
  hosts: localhost
  gather_facts: no
  tasks:
    - debug:
        var: ALLOW_OVNINFRA_PLAYBOOK
    - debug:
        msg: "ALLOW_OVNINFRA_PLAYBOOK variable is required"
      failed_when: "'true' not in ALLOW_OVNINFRA_PLAYBOOK"

- hosts: all
  gather_facts: no
  tasks:
    - debug:
        msg: "This file has been deprecated and moved to ovn_app_infrastructure repository"
      run_once: true

# This playbook produces vars_about_occ.yml and vars_about_oce.yml files to be used later during set up of ovn at oce
# and occ respectfully.  For example, at some point during initial provisioning of occ, this playbook needs to be
# invoked and information about occ will be captured in the vars_about_occ.yml file.  This vars file must be supplied
# during set up of ocE's mediator and kafka replication.  In it's turn, vars_about_oce.yml needs to be supplied during
# ocC's mediator # and kafka playbooks are invoked.
- hosts: ovn_mediator_servers:kafka:zookeeper:hadoop_namenodes:kerberos_server
  gather_facts: yes

- hosts: localhost
  tasks:
    - set_fact:
        captured_forward_handler_endpoints : >
              {% set comma = joiner() %}
              {%for item in groups.ovn_mediator_servers -%}
                  {{ comma() }} "{{hostvars[item]['ansible_default_ipv4']['address']}}"
              {%- endfor %}
        captured_kafka_members : >
              {% set comma = joiner() %}
              {%for item in groups.kafka -%}
                  {{ comma() }}{{hostvars[item]['ansible_default_ipv4']['address']}}:{{client_ssl_port}}
              {%- endfor %}
        captured_zookeeper_members : >
              {% set comma = joiner(",") %}
              {%for item in groups.zookeeper -%}
                  {{ comma() }}{{hostvars[item]['ansible_default_ipv4']['address']}}:{{zk_port}}
              {%- endfor %}
        captured_zookeeper_members_nodenames : >
              {% set comma = joiner(",") %}
              {%for item in groups.zookeeper -%}
                  {{ comma() }}{{hostvars[item]['ansible_nodename']}}:{{zk_port}}
              {%- endfor %}
        captured_namenode_members : >
              {% set comma = joiner(",") %}
              {% set namenodes = groups.hadoop_namenodes if 'hadoop_namenodes' in groups else [] %}
              {% for item in namenodes -%}
                  {{ comma() }}{{hostvars[item]['ansible_nodename']}}
              {%- endfor %}
        captured_kerberos_server_members : >
              {% set comma = joiner(",") %}
              {% set kerberos_servers = groups.kerberos_server if 'kerberos_server' in groups else [] %}
              {% for item in kerberos_servers -%}
                 {{ comma() }}{{hostvars[item]['ansible_default_ipv4']['address']}}
              {%- endfor %}
    - name: generate vars about this DC
      become: false
      template: src=templates/vars_about.yml.j2 dest=/tmp/vars_about_{{ cluster_name }}.yml
