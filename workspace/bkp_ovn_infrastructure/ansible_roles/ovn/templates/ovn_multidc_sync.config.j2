[
    {ovn_multidc_sync,
        [{consumers,
            [{% if remote_instance is defined %}
             {ovn_multidc_sync_tran_log,
                [{ "{{remote_tran_log_kafka_topic}}",
                      [{partitions, {{partitions_count}} },
                       {client, ovn_multidc_sync_brod_2}]}
                ]
             }
             ,{ovn_multidc_sync_station_state,
                [{ "{{remote_station_state_kafka_topic}}",
                      [{partitions, {{partitions_count}} },
                       {client, ovn_multidc_sync_brod_2}]
                }]
             }
             ,{ovn_multidc_sync_cdb_state,
                [{ "{{remote_cdb_state_kafka_topic}}",
                      [{partitions, {{partitions_count}} },
                       {client, ovn_multidc_sync_brod_2}]
                }]
             }
             {% endif %}
            ]
         },
         {group_config, [{offset_commit_policy, commit_to_kafka_v2},
                         {offset_commit_interval_seconds, 60},
                         {offset_retention_seconds, 1}]
         },
         {consumer_config, [{begin_offset, earliest},
                            {offset_reset_policy, reset_to_earliest}]
         }
        ]
    },
    
    {brod,
        [{clients , [{ovn_multidc_sync_brod_1, %% registered name
                        [{endpoints, {{kafka_endpoints}} },
                         {reconnect_cool_down_seconds, 10}, %% connection error
                         {query_api_versions, false}]
                     },
                     {ovn_multidc_sync_brod_2, %% registered name
                        [{endpoints, {{kafka_endpoints}} },
                         {reconnect_cool_down_seconds, 10}, %% connection error
                         {query_api_versions, false}]
                     }]
        }]
    },
    
  {pooler, [
    { metrics_module, ovn_metric},
    { pools, [{{riak_endpoints_pooler_config}}] }
  ]},

  {lager, [
    {colored, true},
    {crash_log, "{{log_dir}}/{{hostvars[inventory_hostname].ansible_hostname}}.crash.log"},
    {crash_log_size, 0},
    {crash_log_date, ""},
    {error_logger_hwm, undefined},
    {handlers, [
      {lager_syslog_backend, ["ovn_multidc_sync", local1, debug]},
      {lager_file_backend, [{file, "{{log_dir}}/{{hostvars[inventory_hostname].ansible_hostname}}.log"}, {level, info}, {size, 104857600}, {count, 5}]}
      ]}
  ]},

  {vmstats, [
    %% Default delay => 1000 millisec, base_key => "vmstats"
    {base_key, "ovn_multidc_sync"}
  ]}

].
