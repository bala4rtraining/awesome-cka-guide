---
- name: check .ssh exists for user root
  stat: path=/root/.ssh
  register: sshdir_result

- name: Create ssh directory for root user
  file: path=/root/.ssh state=directory owner=root group=root mode=700
  when: sshdir_result.stat.exists == false

- name: Add root user into the ftp group
  user: name=root
        groups=ftp
        append=yes

- name: Append the public key to authorized key
  authorized_key:
    user: root
    state: present
    key: "{{ prometheus_public }}" 

- name: check prometheus.pub file exists
  stat: path="{{ prometheus_ssh_idrsa_pub_path }}"
  register: idrsafilepub_result

- name: Create prometheus.pub file
  file: "path={{ prometheus_ssh_idrsa_pub_path }} state=touch owner=root group=root mode=644"
  when: idrsafilepub_result.stat.exists == False

- name: Check if already public key exist
  shell: grep  {{ prometheus_public }} "{{ prometheus_ssh_idrsa_pub_path }}"
  register: idrsapub_result
  ignore_errors: True

- name: Append the public keys file
  copy: content={{ prometheus_public }}  dest="{{ prometheus_ssh_idrsa_pub_path }}"
  when: idrsapub_result.stdout == ""

- name: check prometheus private file exists
  stat: path=/root/.ssh/prometheus
  register: idrsafile_result

- name: Create vss file
  file: "path={{ prometheus_ssh_idrsa_path }} state=touch owner=root group=root mode=600"
  when: idrsafile_result.stat.exists == False

- name: Check if already private key exist
  shell: grep  "{{ prometheus_private }}"  {{ prometheus_ssh_idrsa_path }}  
  register: idrsa_result
  ignore_errors: True

- name: Append the private keys  to vss file
  copy: content="{{ prometheus_private }}"  dest={{ prometheus_ssh_idrsa_path }}
  when: idrsa_result.stdout == ""
  
