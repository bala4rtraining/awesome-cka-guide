global:
  scrape_interval:     10s
  evaluation_interval: 15s

  external_labels:
      prometheus_server: '{% if prometheus_use_fqdn == "true" %}{{ ansible_fqdn }}{% else %}{{ inventory_hostname }}{% endif %}'
      datacenter_id: '{{ prometheus_datacenter_id }}'
      environment: '{{ environment_name }}'

rule_files:
{% for val in prometheus_rule_files %}
  - {{ val.dest }}
{% endfor %}

alerting:
  alert_relabel_configs:
    - source_labels: [instance]
      regex: .*
      replacement: ""
      target_label: instance
      action: replace
    - source_labels: [job]
      regex: .*
      replacement: ""
      target_label: job
      action: replace
  alertmanagers:
    - path_prefix: "/{{ alertmanager_app_context_path }}"
{% if alertmanager_ssl_enabled == 'true'  %}
      scheme: https
      tls_config:
        ca_file: {{ prometheus_nginx_ssl_client_certificate }}
        cert_file: {{ prometheus_nginx_ssl_certificate_path }}
        key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
      static_configs:
      - targets:
{% for node in groups.prometheus_alertmanager|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
        - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_default_port }}"
{% else %}
        - "{{ hostvars[node].inventory_hostname }}:{{ nginx_default_port }}"
{% endif %}
{% endfor %}

scrape_configs:
- job_name: '{{ prometheus_context_path }}'
{% if prometheus_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  metrics_path: "/{{ prometheus_app_context_path }}/metrics"
  relabel_configs:
      - source_labels: [__address__]
        regex: '(.*)(:.*)'
        target_label: hostname
        replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.prometheus_server|default( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_default_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_default_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: prometheus

- job_name: 'system_metrics'
  metrics_path: "{{ node_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.all|difference(groups.cumulus_switch|default( {} ))|difference(groups.ovn_manager|default( {} )) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: system

- job_name: 'ovn_monitoring_metrics'
  metrics_path: "{{ ovn_monitoring_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.ovn_monitoring_exporter|default( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: ovn_monitoring

- job_name: '{{ alertmanager_context_path }}'
  metrics_path: "/{{ alertmanager_app_context_path }}/metrics"
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% if alertmanager_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  static_configs:
    - targets:
{% for node in groups.prometheus_alertmanager|default( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_default_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_default_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: alertmanager

- job_name: 'statsd_metrics'
  metrics_path: "{{ statsd_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  metric_relabel_configs:
   - source_labels: [__name__]
     regex: 'servers_.*'
     action: drop
   - source_labels: [__name__]
     regex: 'nomad_jvm_metrics.*'
     action: drop
   - source_labels: [__name__]
     regex: 'nomad.*_client_alloc.*'
     action: drop
   - source_labels: [__name__]
     regex: 'nomad.*_client_unalloc.*'
     action: drop
   - source_labels: [__name__]
     regex: 'nomad.*_client_host.*'
     action: drop
   - source_labels: [__name__]
     regex: 'pooler.*'
     target_label: service_name
     replacement: pooler
   - source_labels: [__name__]
     regex: 'mediator.*'
     target_label: service_name
     replacement: mediator
   - source_labels: [__name__]
     regex: 'ovn_switch.*'
     target_label: service_name
     replacement: switch
   - source_labels: [__name__]
     regex: 'riak.*'
     target_label: service_name
     replacement: riak
   - source_labels: [__name__]
     regex: 'umf.*'
     target_label: service_name
     replacement: umf_delivery
  static_configs:
    - targets:
{% for node in groups.ovn_mediator_servers|union(groups.ovn_riak_servers)|union(groups.ovn_switch_servers)|union(groups.ovn_multidc_sync)|union(groups.ovn_vitalsigns_delivery)|union(groups.ovn_umf_delivery)|union(groups.nomad_server)|union(groups.nomad_client)|union(groups.ovn_vss_servers)|default( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}

- job_name: 'hdfs_metrics_namenode'
  metrics_path: "{{ hdfs_jmxexporter_namenode_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.hadoop_namenodes|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: hdfs

- job_name: 'hdfs_metrics_datanode'
  metrics_path: "{{ hdfs_jmxexporter_datanode_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.hadoop_datanodes|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: hdfs

- job_name: 'elasticsearch_metrics'
  metrics_path: "{{ elasticsearch_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.elasticsearch|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: elasticsearch

- job_name: 'fluentd_metrics'
  metrics_path: "{{ fluentd_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.all|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: td-agent

#Do not scrape until we have use case for pushgateway_exporter
- job_name: 'pushgateway_metrics'
  metrics_path: "{{ pushgateway_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  static_configs:
    - targets:
{% for node in groups.prometheus_pushgateway|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}

- job_name: 'kafka_metrics'
  metrics_path: "{{ kafka_jmxexporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.kafka|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: kafka

- job_name: 'zookeeper_metrics'
  metrics_path: "{{ zookeeper_jmxexporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.zookeeper|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: zookeeper

- job_name: 'haproxy_metrics'
  metrics_path: "{{ haproxy_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.haproxy|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: haproxy

- job_name: 'process_metrics'
  metrics_path: "{{ process_exporter_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  static_configs:
    - targets:
{% for node in groups.all|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: ovn_processes

- job_name: 'yummirrors_metrics'
  metrics_path: "{{ yum_mirrors_telemetry_path }}"
{% if nginx_exporter_ssl_enabled == 'true'  %}
  scheme: https
  tls_config:
    ca_file: {{ prometheus_nginx_ssl_client_certificate }}
    cert_file: {{ prometheus_nginx_ssl_certificate_path }}
    key_file: {{ prometheus_nginx_ssl_certificate_key_path }}
{% endif %}
  relabel_configs:
     - source_labels: [__address__]
       regex: '(.*)(:.*)'
       target_label: hostname
       replacement: "$1"
  static_configs:
    - targets:
{% for node in groups.yum_mirror_servers|default ( {} ) %}
{% if hostvars[node].ansible_fqdn is defined and prometheus_use_fqdn == "true" %}
      - "{{ hostvars[node].ansible_fqdn }}:{{ nginx_exporter_port }}"
{% else %}
      - "{{ hostvars[node].inventory_hostname }}:{{ nginx_exporter_port }}"
{% endif %}
{% endfor %}
      labels:
        service_name: yummirrors