# HTTP Server
server:
  port: "{{cas_http_port}}"
  secret: "ovn_key"

# Logger
logger:
  file_backend:
    log_level: {{ cas_tool_file_logger_level }}
    path: {{ cas_tool_file_logger_path }}
    prefix: {{ cas_tool_file_logger_prefix }}
  syslog_backend:
    log_level: {{ cas_tool_sys_logger_level }}
    prefix: {{ cas_tool_sys_logger_prefix }}
  console_backend:
    log_level: {{ cas_tool_console_logger_level }}

# Core Components
profile:
  path: "{{clearing_profile}}"
riak:
  nodes:
{% for node in groups.ovn_riak_servers %}
    - {{ node }}:{{ protobuf_listener_port}}
{% endfor %}
  max_connections: 100
  exception_bucket: "exceptions"
  job_history_bucket: "job_history"
  file_metadata_bucket: "file_metadata"
  clearing_config_bucket: "clearing_config"
  clearing_override_bucket: "clearing_override"
nomad:
  urls:
{% for item in groups.nomad_server %}
{% if enable_tls_nomad == true %}
    - https://{{ hostvars[item].ansible_nodename }}:{{ nomad_server_http_port }}
{% else %}
    - http://{{ hostvars[item].ansible_nodename }}:{{ nomad_server_http_port }}
{% endif %}
{% endfor %}
  collectionJobScript: "/opt/app/jobs/{{collection_job_script_path}}/bin/collection-job-main"
  dataCenter: "{{ vic_identity | regex_replace(' $', '') }}"
  userName: "{{ ovn_clearing_user }}"
{% if enable_tls_nomad == true %}
  nomad-ca: "/opt/nomad_{{nomad_version}}/cert/nomad-ca.pem"
  nomad-cli: "/opt/nomad_{{nomad_version}}/cert/cli.pem"
  nomad-cli-key: "/opt/nomad_{{nomad_version}}/cert/cli-key.pem"
{% endif %}
  enable_tls: {{enable_tls_nomad}}
kafka:
  brokers:
{% for broker in groups.kafka %}
    - {{ broker }}:{{ kafka_port }}
{% endfor %}
  topic: "{{xdc_state_kafka_topic}}"
cas:
  ca: "/opt/nomad_{{nomad_version}}/server/nomad-ca.pem"
  cert: "/opt/nomad_{{nomad_version}}/cert/cli.pem"
  key: "/opt/nomad_{{nomad_version}}/cert/cli-key.pem"
