---

# take the bakup of existing config file
- name: checking if yum mirror client config file exists
  stat: 
    path: "{{ yum_config_dir }}/ovn_centos_el7.repo"
  register: config_result

- name: rename the existing yum mirror client config file as backup
  shell: mv "{{ yum_config_dir }}/ovn_centos_el7.repo" "{{ yum_config_dir }}/ovn_centos_el7.repo_backup"
  when: config_result.stat.exists == True

# create configuration file for deployment repo
- name: create yum mirror client configuration file for deployment repo
  template:
    src: 'templates/ovn_deployment_el7.j2'
    dest: "{{ yum_config_dir }}/ovn_deployment_el7.repo"
    force: yes
    owner: root
    group: root
    mode: 0644

# install local repos basefile to sync with local mirrors
- name: install local repos basefile in yum mirror clients
  lineinfile:
    path: "{{ yum_config_dir }}/local-base-mirror"
    create: yes
    line: "https://{{ item[1] }}:{{ nginx_default_port }}/{{ item[0] }}"
    state: present
  with_nested:
    - "{{ yum_repos }}"
    - [ "{{ yum_local_primary_server }}", "{{ yum_local_secondary_server }}" ]

# install yum local repo to sync with local mirrors
- name: install yum local repo in yum mirror clients to sync with local mirrors
  lineinfile:
    path: "{{ yum_config_dir }}/ovn_deployment_el7.repo"
    regexp: '^(.*){{ yum_repos_source }}/{{item}}(.*)$'
    line: 'mirrorlist=file:///etc/yum.repos.d/local-base-mirror'
    state: present
    backrefs: yes
  with_items: "{{ yum_repos }}"

# appent yum.conf file with ssl configs
- name: appent yum.conf file with ssl configs
  blockinfile:
    dest: "/etc/yum.conf"
    block: |
      sslverify=true
      sslclientcert=/etc/pki/tls/certs/{{ inventory_hostname }}.pem
      sslcacert=/etc/pki/tls/certs/bundle.pem
      sslclientkey=/etc/pki/tls/private/{{ inventory_hostname }}.pem
    insertafter: EOF

# clear the yum cache
- name: clean yum cache
  shell: |
    yum clean all