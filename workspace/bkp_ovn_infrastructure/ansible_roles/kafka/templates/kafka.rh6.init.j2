#!/bin/bash
#
# Apache Kafka Broker
#
# chkconfig:   2345 80 20
# description: Starts and stops a single broker instance on this system
#

### BEGIN INIT INFO
# Provides: SERVICE
# Required-Start: $network zookeeper kafka
# Required-Stop: $network zookeeper kafka
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: This service manages kafka
# Description: Apache Kafka broker
### END INIT INFO

#
# Source function library.
#
if [ -f /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
fi

prog="kafka"
exec="/usr/bin/java -Xmx1G -Xms1G -server \
        -XX:+UseG1GC \
        -XX:MaxGCPauseMillis=20 \
        -XX:InitiatingHeapOccupancyPercent=35 \
        -XX:+DisableExplicitGC \
        -Djava.awt.headless=true \
        -Xloggc:{{kafka_log_dir}}/kafkaServer-gc.log \
        -verbose:gc \
        -XX:+PrintGCDetails \
        -XX:+PrintGCDateStamps \
        -XX:+PrintGCTimeStamps \
        -Dkafka.logs.dir={{kafka_log_dir}} \
        -Dlog4j.configuration=file:{{kafka_install_dir}}/config/log4j.properties \
        -cp :{{kafka_install_dir}}/libs/* kafka.Kafka {{kafka_install_dir}}/config/server.properties"
pidfile="/var/run/$prog.pid"
lockfile="/var/lock/subsys/$prog"
logfile="{{kafka_log_dir}}/$prog.log"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

case "$1" in
    start)
        echo -n "Starting ${prog}..."
        PID=`nohup $exec >> $logfile 2>1 < /dev/null & echo ${!}`
        retval=$?
        if [ -z $PID ]; then
            echo -n "   Failed to start."
        else
            echo $PID > $pidfile
            echo -n "   Started."
        fi
        echo
        [ $retval -eq 0 ] && touch $lockfile
        ;;
    stop)
        echo -n "Stopping ${prog}..."
        PID=`cat ${pidfile}`
        kill ${PID}
        retval=$?
        kill -0 ${PID} 2> /dev/null
        running=$?
        while [[ $retval -eq 0 && $running -eq 0 ]]; do
            sleep 1
            kill -0 ${PID} 2> /dev/null
            running=$?
        done
        echo "   OK."
        [ $retval -eq 0 ] && rm -f $pidfile && rm -f $lockfile
        ;;
    restart)
        ## Stop the service and regardless of whether it was
        ## running or not, start it again.
        $0 stop
        $0 start
        retval=$?
        ;;
    status)
        # run checks to determine if the service is running or use generic status
        echo -n "Checking ${prog}..."
        if [ -f $pidfile ]; then
            PID=`cat $pidfile`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                echo "  Process dead, but pidfile exists."
                exit 1
            else
                echo "  Running."
                exit 0
            fi
        else
            echo "  Service not running."
            exit 1
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $retval
