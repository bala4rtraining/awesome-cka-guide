@Library('ovn-shared-library') _
pipeline {
    agent {
        docker {
            image 'ovn-docker.artifactory.trusted.visa.com/centos7_ovn_docker'
            label 'ovn_build'
            args '-v /sys/fs/cgroup:/sys/fs/cgroup -v /home/was/.ssh:/home/was/.ssh'
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '15'))
    }
    parameters {
        choice(name:'grafana_auth_proxy_enabled', choices: 'true\nfalse')
        choice(name:'nginx_enable_ssl', choices: 'true\nfalse')
        string(name: 'grafana_dashboard_version', defaultValue: '', description: 'Enter the version number to pick up the tarball')
		choice(name:'create_datasource', choices: 'disable\nenable', description: 'enable - Fresh deployment of Grafana and Grafana Dashboard disable - Only Grafana Dashboard deployment when prometheus as datasource is already provisioned ')
        string(name: 'RELEASE_BRANCH', defaultValue: '', description: 'Enter the release branch details')
    }
    stages {
    stage('set cluster variables') {
      // boilerplate for stage must be the first stage
      // in all the cd pipeline jobs.
      steps {
        setClusterAndDatacenter(env);
      }
    }
        stage('Checkout SCM'){
            steps{
        git credentialsId: 'ENV.root_key', url: 'ssh://git@stash.trusted.visa.com:7999/op/ovn_infrastructure.git', branch: "${RELEASE_BRANCH}"
  }
}
         stage('deploy-prometheus-grafana_dashboards') {
            steps {
                ansiColor('xterm') {
                   ansiblePlaybook credentialsId: 'ENV.root_key', inventory: "inventories/${env.CLUSTER}/${env.DATACENTER}", extras: "--extra-vars @config/${env.ENV}.vars.secret.yml --vault-password-file=~/.vault-${env.ENV} --extra-vars grafana_auth_proxy_enabled=${grafana_auth_proxy_enabled} --extra-vars  grafana_dashboard_version=${grafana_dashboard_version} --extra-vars create_datasource=${create_datasource} --extra-vars nginx_enable_ssl=${nginx_enable_ssl}", playbook: 'ansible_ovn/deploy_grafana_dashboard.yml'

       }
    }
  }
 }
}

