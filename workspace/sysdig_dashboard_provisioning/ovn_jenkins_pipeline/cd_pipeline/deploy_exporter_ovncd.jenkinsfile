@Library('ovn-shared-library') _
pipeline {
    agent {
        docker {
            image 'ovn-docker.artifactory.trusted.visa.com/centos7_ovn_docker'
            label 'ovn_build'
            args '-v /sys/fs/cgroup:/sys/fs/cgroup -v /home/was/.ssh:/home/was/.ssh'
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '15'))
    }
    parameters {
        choice(name:'exporter_name', choices: 'statsd_exporter\nnode_exporter\nhaproxy_exporter\njmx_exporter\nelasticsearch_exporter\novn_monitoring_exporter', description: 'Select the exporter name to deploy')
        string(name: 'branch', defaultValue: '', description: 'Enter the release branch details')
		string(name: 'extra_vars', defaultValue: '', description: 'any extra vars')
    }
    stages {
        stage('set cluster variables') {
          // boilerplate for stage must be the first stage
          // in all the cd pipeline jobs.
          steps {
            setClusterAndDatacenter(env);
          }
        }
        stage('Checkout SCM') {
            steps{
                git credentialsId: '', url: 'ssh://git@stash.trusted.visa.com:7999/op/ovn_infrastructure.git', branch: "${params.branch}"
               }
        }
        stage('deploy_exporter') {
            steps {
                ansiColor('xterm') {
                   ansiblePlaybook colorized: true, credentialsId: 'ovncd_ssh_key', inventory: "inventories/${env.CLUSTER}/${env.DATACENTER}", extras: "--extra-vars @config/${env.ENV}.vars.secret.yml --vault-password-file ~/.vault-${env.ENV} ${params.extra_vars} --become --extra-vars exporter_name=${exporter_name}", playbook: 'ansible_prometheus/deploy_exporter.yml'
                }
            }
        }
    }
}
