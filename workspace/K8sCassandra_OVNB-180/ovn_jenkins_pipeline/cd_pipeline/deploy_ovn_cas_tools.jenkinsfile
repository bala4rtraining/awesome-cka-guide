@Library('ovn-shared-library') _

pipeline {
  agent {
    docker {
      image 'ovn-docker.artifactory.trusted.visa.com/centos7_ovn_docker'
      label 'ovn_build'
      args '-v /sys/fs/cgroup:/sys/fs/cgroup -v /home/was/.ssh:/home/was/.ssh'
    }
  }
  parameters {
    booleanParam(name: 'KafkaEnableTLS', defaultValue: true, description: '')
    booleanParam(name: 'NomadEnableTLS', defaultValue: true, description: '')
    booleanParam(name: 'RiakEnableTLS', defaultValue: true, description: '')
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '15'))
  }
  stages {
    stage('set cluster variables') {
      // boilerplate for stage must be the first stage
      // in all the cd pipeline jobs.
      // (see ovn_infrastructure/vars and ovn_infrastructure/src directory for shared libraries)
      steps {
        setClusterAndDatacenter(env);
      }
     } 
    stage('checkout SCM'){
      steps{
        git credentialsId: 'ENV.root_key', url: 'ssh://git@stash.trusted.visa.com:7999/op/ovn_app_infrastructure.git', branch: "${RELEASE_BRANCH}"
      }
    }
    stage('deploy_ovn_cas_tools'){
      steps{
        ansiColor('xterm'){
           ansiblePlaybook playbook: 'ansible_ovn/deploy_cas_tools.yml',
                           inventory: 'inventories/$CLUSTER/$DATACENTER',
                           credentialsId: 'ENV.root_key',
                           colorized: true,
                           forks: 5,
                           sudoUser: null,
                           extras: '-e @config/$ENV.vars.secret.yml --vault-password-file=~/.vault-$ENV -e "{kafka_enable_tls: $KafkaEnableTLS, nomad_enable_tls: $NomadEnableTLS, riak_enable_tls: $RiakEnableTLS}"'
        }
      }
    }
  }
}
