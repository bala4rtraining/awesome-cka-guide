---
apiVersion: v1
data:
  schema.txt: 
kind: Secret
metadata:
  creationTimestamp: null
  name: cassandraschema
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R1
---
apiVersion: v1
data:
  topics.txt: b3ZuLnRpbWVyCm92bi5kZWFkLmxldHRlci50aW1lcgpvdm4ucmV0cnkudGltZXIKb3ZuLmF0ci50aW1lb3V0Cm92bi5kZWFkLmxldHRlci5hdHIudGltZW91dApvdm4ucmV0cnkuYXRyLnRpbWVvdXQKb3ZuLm1zZ19jb21wbGV0aW9uCm92bi5hZHZpY2Uuc3RvcmFnZQpvdm4ucmV0cnkuYWR2aWNlLnN0b3JhZ2UKb3ZuLmRlYWQubGV0dGVyLmFkdmljZS5zdG9yYWdlCm92bi5hZHZpY2UucmVjb3ZlcnkKb3ZuLnJldHJ5LmFkdmljZS5yZWNvdmVyeQpvdm4uZGVhZC5sZXR0ZXIuYWR2aWNlLnJlY292ZXJ5Cm92bi50ZXN0LmNvbmZpZwpvdm4uZ2VuZXJhdGUucmRzbXMucmVwb3J0cwpvdm4ucmV0cnkuZ2VuZXJhdGUucmRzbXMucmVwb3J0cwpvdm4uZGVhZC5sZXR0ZXIuZ2VuZXJhdGUucmRzbXMucmVwb3J0cwpvdm4udHJhbnNhY3Rpb24uY2xlYXJlZApvdm4ucmV0cnkudHJhbnNhY3Rpb24uY2xlYXJlZApvdm4uZGVhZC5sZXR0ZXIudHJhbnNhY3Rpb24uY2xlYXJlZApvdm4uZ2VuZXJhdGUuZHVhbC5mcmFnbWVudApvdm4ucmV0cnkuZ2VuZXJhdGUuZHVhbC5mcmFnbWVudApvdm4uZGVhZC5sZXR0ZXIuZ2VuZXJhdGUuZHVhbC5mcmFnbWVudApvdm4uZ2VuZXJhdGUuc21zLmZyYWdtZW50Cm92bi5yZXRyeS5nZW5lcmF0ZS5zbXMuZnJhZ21lbnQKb3ZuLmRlYWQubGV0dGVyLmdlbmVyYXRlLnNtcy5mcmFnbWVudApvdm4uY2xvc2Uud2luZG93Cm92bi5yZXRyeS5jbG9zZS53aW5kb3cKb3ZuLmRlYWQubGV0dGVyLmNsb3NlLndpbmRvdwpvdm4uZ2VuZXJhdGUuc21zLnJlcG9ydHMKb3ZuLnJldHJ5LmdlbmVyYXRlLnNtcy5yZXBvcnRzCm92bi5kZWFkLmxldHRlci5nZW5lcmF0ZS5zbXMucmVwb3J0cwpvdm4ucmVwbGljYXRlX3dvcmtzcGFjZS5pZC4yCm92bi5yZXBsaWNhdGVfd29ya3NwYWNlLmlkLjMKb3ZuLnJldHJ5LnJlcGxpY2F0ZV93b3Jrc3BhY2UuaWQuMgpvdm4ucmV0cnkucmVwbGljYXRlX3dvcmtzcGFjZS5pZC4zCm92bi5kZWFkX2xldHRlci5yZXBsaWNhdGVfd29ya3NwYWNlLmlkLjIKb3ZuLmRlYWRfbGV0dGVyLnJlcGxpY2F0ZV93b3Jrc3BhY2UuaWQuMwpvdm4uYXBwbHkucmVwbGljYXRlX3dvcmtzcGFjZQpvdm4ucmV0cnkuYXBwbHkucmVwbGljYXRlX3dvcmtzcGFjZQpvdm4uZGVhZF9sZXR0ZXIuYXBwbHkucmVwbGljYXRlX3dvcmtzcGFjZQpvdm4udGVzdC5hcHBseS5yZXBsaWNhdGVfd29ya3NwYWNlCgo=
kind: Secret
metadata:
  creationTimestamp: null
  name: kafkatopics
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R2
---
apiVersion: v1
kind: Service
metadata:
  name: cassandra
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R1
spec:
  ports:
    - name: tcp-9042-9042
      port: 9042
      protocol: TCP
      targetPort: 9042
  selector:
    name: cassandrapod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cassandra-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: cassandrapod
  template:
    metadata:
      labels:
        name: cassandrapod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8cassndra:ovk8cassndra-master_6'
        imagePullPolicy: Always
        name: cassandra-container
        ports:
          - containerPort: 9042
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        securityContext: 
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/mware/vaultcredentials
          name: vault-token
        - mountPath: /usr/app/config
          name: files
        - mountPath: /conf
          name: configs
        - mountPath: /tmp
          name: tmpconfigs
        - mountPath: /tmp/cassandra
          name: cassandraschema      
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: vault-token
      - emptyDir: {}
        name: files
      - emptyDir: {}
        name: configs
      - emptyDir: {}
        name: tmpconfigs
      - name: cassandraschema
        secret:
          secretName: cassandraschema  
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R2
spec:
  ports:
    - name: tcp-9092-9092
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    name: kafkapod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: kafka-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafkapod
  template:
    metadata:
      labels:
        name: kafkapod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8kafka:ovk8kafka-master_7'
        imagePullPolicy: Always
        name: kafka-container
        ports:
          - containerPort: 9092
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/mware/vaultcredentials
          name: vault-token
        - mountPath: /usr/app/config
          name: files
        - mountPath: /conf
          name: configs
        - mountPath: /tmp
          name: tmpconfigs
        - mountPath: /tmp/kafka
          name: kafkatopics
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: vault-token
      - emptyDir: {}
        name: files
      - emptyDir: {}
        name: configs
      - emptyDir: {}
        name: tmpconfigs
      - name: kafkatopics
        secret:
          secretName: kafkatopics
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: messageprocessor
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R3
spec:
  ports:
    - name: tcp-9001-9001
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    name: mppod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mp-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mppod
  template:
    metadata:
      labels:
        name: mppod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8mp:ovk8mp-qa-rel-0-3-2_70'
        imagePullPolicy: Always
        name: mp-container
        ports:
          - containerPort: 9001
            protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: mediator
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R4
spec:
  ports:
    - name: tcp-9001-9001
      port: 9001
      protocol: TCP
      targetPort: 9001
    - name: tcp-8050-8050
      port: 8050
      protocol: TCP
      targetPort: 8050
  selector:
    name: mediatorpod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mediator-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R4
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mediatorpod
  template:
    metadata:
      labels:
        name: mediatorpod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8med:ovk8med-pref2b_4'
        imagePullPolicy: Always
        name: mediator-container
        ports:
          - containerPort: 9001
            protocol: TCP
          - containerPort: 8050
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: messagepostprocessor
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R5
spec:
  ports:
    - name: tcp-9005-9005
      port: 9005
      protocol: TCP
      targetPort: 9005
  selector:
    name: mpppod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mpp-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R5
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mpppod
  template:
    metadata:
      labels:
        name: mpppod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8mpp:ovk8mpp-qa-rel-0-3-2_16'
        imagePullPolicy: Always
        name: mpp-container
        ports:
          - containerPort: 9005
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: timer
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R6
spec:
  ports:
    - name: tcp-8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    name: timerpod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: timer-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R6
spec:
  replicas: 1
  selector:
    matchLabels:
      name: timerpod
  template:
    metadata:
      labels:
        name: timerpod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8timer:ovk8timer-qa-rel-0-3-2_32'
        imagePullPolicy: Always
        name: timer-container
        ports:
          - containerPort: 8080
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: hsmwrapper
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R7
spec:
  ports:
    - name: tcp-8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: tcp-5501-5501
      port: 5501
      protocol: TCP
      targetPort: 5501
  selector:
    name: hsmwrappod
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: hsmwrap-deployment
  namespace: ovk8nightly-development-business
  labels:
    applicationNo: !!str 0030023
    componentName: ovn-ct-mock-qa1b
    dataCenter: OCE
    deploymentModelName: OVN_K8s_DM16
    domain: visa.com
    envName: Development
    envType: Development
    network: CONTAINER-NON-PROD-GEN
    project: OVK8NIGHTLY
    zone: Business
    requestedFor: jiasun
    resourceKey: R7
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hsmwrappod
  template:
    metadata:
      labels:
        name: hsmwrappod
    spec:
      containers:
      - image: 'nonprodregistry.visa.com/np-0030023/ovk8hsmwrap:ovk8hsmwrap-qa-rel-0-3-2_13'
        imagePullPolicy: Always
        name: hsmwrap-container
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5501
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange

