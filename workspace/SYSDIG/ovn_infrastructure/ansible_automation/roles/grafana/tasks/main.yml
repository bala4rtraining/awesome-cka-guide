---
- name: create grafana group if not created
  group:
    name: grafana
    state: present

- name: create {{ grafana_user }} userid if not created
  user:
    name: "{{ grafana_user }}"
    group: grafana
    state: present

- name: create grafana home directory
  file:
    path: "{{ item.name }}"
    owner: "{{ grafana_user }}"
    group: grafana
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { name: '{{ grafana_home }}', mode: '0755' }
    - { name: '{{ grafana_log_dir }}', mode: '0755' }
    - { name: '{{ grafana_data_dir }}', mode: '0700' }
    - { name: '{{ grafana_plugins_dir }}', mode: '0755' }

- name: Ensure grafana is installed.
  yum:
    name: "{{ grafana_package_name }}"
    state: installed
    disablerepo: '{{ spacewalk_yum_repo }}'

- name: Update grafana ini file to setup reverse proxy
  ini_file:
    dest: "/etc/grafana/grafana.ini"
    section: "server"
    option: "domain"
    value: "{{ inventory_hostname }}"
    backup: yes

- name: Update grafana ini file to setup reverse proxy
  ini_file:
    dest: "/etc/grafana/grafana.ini"
    section: "server"
    option: "root_url"
    value: "https://{{ inventory_hostname }}:{{ ci_ssl_port }}/{{ grafana_context_path }}/"
    backup: yes

- name: Add grafana service
  template:
    src: 'grafana-server.service.j2'
    dest: '/etc/systemd/system/grafana-server.service'
    owner: root
    group: root
    mode: 0644
  register: grafana_service_result

- name: reload system service config and restart on service config change.
  shell: systemctl daemon-reload
  when: grafana_service_result.changed == true

- name: Restart grafana on config file change.
  service:
    name: grafana-server
    state: restarted
  when: >
    grafana_service_result.changed == true

- name: Ensure grafana is started and enabled to start at boot.
  service:
    name: grafana-server
    state: started
    enabled: yes
