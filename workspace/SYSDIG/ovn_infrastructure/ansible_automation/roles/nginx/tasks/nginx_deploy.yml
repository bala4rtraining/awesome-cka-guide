---
- name: check if self-signed certificate needs to be generated
  stat:
    path: '{{ nginx_home }}/cert/{{ nginx_key }}'
  register: nginx_key_check

- name: Add nginx cert.cnf file.
  template:
    src: 'cert.cnf.j2'
    dest: '{{ nginx_home }}/cert/cert.cnf'
    force: yes
    owner: root
    group: root
    mode: 0640

#
# generate self signed certificate for SSL reverse proxy
# should generate CSR and get it signed by VICA for secure deployment.
- name: generate SSL private key and cert
  shell: |
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout {{nginx_home}}/cert/{{nginx_key}} -out {{nginx_home}}/cert/{{nginx_cert}} -config {{ nginx_home }}/cert/cert.cnf
    chmod 0600 {{nginx_home}}/cert/{{nginx_key}}
  when: nginx_key_check.stat.exists == false

- name: check if dhparam is needed
  stat:
    path: '{{ nginx_home }}/cert/{{ nginx_dhparam }}'
  register: nginx_dhparam_check

- name: generate dhparam.pem 2048 bit for DHE key exchange
  shell: |
    openssl dhparam -out {{ nginx_home }}/cert/{{ nginx_dhparam }} 2048
    chmod 0600 {{ nginx_home }}/cert/{{ nginx_dhparam }}
  when: nginx_dhparam_check.stat.exists == false

- name: Add nginx service
  template:
    src: 'nginx.service.j2'
    dest: '/etc/systemd/system/nginx.service'
    owner: root
    group: root
    mode: 0644
  register: nginx_service_result

- name: reload system service config and restart on service config change.
  shell: systemctl daemon-reload
  when: nginx_service_result.changed == true

- name: Add nginx server config file.
  template:
    src: 'nginx.conf.j2'
    dest: '{{ nginx_home }}/{{ nginx_conf }}'
    force: yes
    owner: root
    group: root
    mode: 0644
  register: nginx_conf_result

- name: Add nginx default server config file.
  template:
    src: 'default.conf.j2'
    dest: '{{ nginx_home }}/conf.d/default.conf'
    force: yes
    owner: root
    group: root
    mode: 0644
  register: nginx_default_result

- name: Restart nginx on config file change.
  service:
    name: nginx
    state: restarted
  when: >
    nginx_key_check.stat.exists == false or
    nginx_dhparam_check.stat.exists == false or
    nginx_service_result.changed == true or
    nginx_conf_result.changed == true or
    nginx_default_result.changed == true
