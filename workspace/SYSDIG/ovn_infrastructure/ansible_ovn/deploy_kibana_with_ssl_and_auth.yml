---
- include: ../ovn_vars.yml ovn_vars_hosts=kibana

- name: Set Elastic Search Hostname based on eserv_type=lbonly host attribute
  hosts: elasticsearch:kibana
  tasks:
    - set_fact: elasticsearch_host="{{ hostvars[item]['ansible_nodename'] }}"
      with_items: "{{ groups['elasticsearch'] }}"
      when: hostvars[item].eserv_type == "lbonly"

- name: install kibana , nginx and nginx_auth with ssl
  hosts: kibana
  roles:
     - kibana
     - nginx
     - nginx_auth
  vars:
    - kibana_reverse_proxy_enabled: true
    - elasticsearch_client_ssl_enabled: "true"
    - cert_data: "{{ elasticsearch_client_cert }}"
    - ca_cert_data: "{{ elasticsearch_client_ca_cert }}"
    - key_data: "{{ elasticsearch_client_key }}"
    - cert_path: "/etc/pki/tls/elasticsearch-client/certs"
    - key_path: "/etc/pki/tls/elasticsearch-client/private"
    - ca_cert_path: "/etc/pki/tls/elasticsearch-client/certs"
    - kibana_elasticsearch_ca_cert_path: "{{ ca_cert_path }}/bundle.pem"
    - kibana_elasticsearch_cert_path: "{{ cert_path }}/{{ inventory_hostname }}.pem"
    - kibana_elasticsearch_key_path: "{{ key_path }}/{{ inventory_hostname }}.pem"
    - nginx_sites:
        default:
          - listen {{ nginx_default_port }}
          - server_name localhost
    - nginx_configs:
        kibana_upstream:
          - upstream kibana {
              server localhost:{{kibana_port}};
            }
        auth_upstream:
          - upstream authServer {
              server localhost:{{nginx_auth_port}};
            }
    - nginx_locations:
      - site: default
        locations:
          - name: kibana
            location:
              - location /{{ kibana_reverse_proxy_path }}/ {
                  auth_request /authorization-proxy/kibana;

                  error_page 403 /forbidden;
                  proxy_pass http://kibana/;
                }
          - name: authorizer
            location:
              - location /authorization-proxy {
                  internal;
                  proxy_set_header X-Original-URI $request_uri;
                  proxy_set_header X-Original-Method $request_method;
                  proxy_pass http://authServer;
                }
              - location /forbidden {
                  proxy_pass http://authServer;
                }


# Install and configure certificates on nginx
- name: Install certificates on machine
  hosts: kibana
  roles:
    - { role: nginx, when: kibana_nginx_enable_ssl == 'true' }
  vars:
    - nginx_sites:
        default:
          - listen {{ nginx_default_port }} ssl
          - server_name localhost
          - ssl_certificate {{ cert_path }}/{{ cert_name }}
          - ssl_certificate_key {{ key_path }}/{{ key_name }}
          - ssl_client_certificate {{ ca_cert_path }}/{{ ca_cert_name }}
          - ssl_verify_client on
          - ssl_verify_depth 2
