---
- name: create Prometheus group for elasticsearch_exporter
  group: name={{ prometheus_group }}  state=present

- name: create Prometheus user for elasticsearch_exporter
  user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    createhome: no
    comment: "Prometheus User"
    state: present

- name: Adding existing user {{ prometheus_user }} to group {{ cert_group }}
  user: 
    name: "{{ prometheus_user }}"
    groups: "{{ cert_group }}"
    append: "yes"

- name: create elasticsearch_exporter install directory {{ exporter_install_dir }}
  file:
    dest: "{{ dir_val }}"
    state: directory
    recurse: yes
    mode: "0750"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  with_items:
    - "{{ exporter_install_dir }}"
  loop_control:
    loop_var: dir_val

- name: check if {{ elasticsearch_exporter_archive_base }} is already provisioned
  stat:
    path: "{{ exporter_install_dir }}/{{ elasticsearch_exporter_archive_base }}"
  register: elasticsearch_exporter_provision_status

- name: deploy elasticsearch_exporter package
  unarchive:
    src: "{{ elasticsearch_exporter_archive }}"
    dest: "{{ exporter_install_dir }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    copy: no
    validate_certs: no
  when: elasticsearch_exporter_provision_status.stat.exists == false

- name: link to elasticsearch_exporter directory {{ elasticsearch_exporter_base_dir }}
  file:
    src: "{{ elasticsearch_exporter_archive_base }}"
    dest: "{{ elasticsearch_exporter_base_dir }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    force: yes
    state: link

- name: deploy elasticsearch_exporter service
  template:
    src: "elasticsearch_exporter.service.j2"
    dest: "/etc/systemd/system/elasticsearch_exporter.service"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "0644"
  register: elasticsearch_exporter_service_result

- name: reload system service configs.
  shell: systemctl daemon-reload
  when: elasticsearch_exporter_service_result.changed == true

- name: enable and start elasticsearch_exporter package.
  service:
    name: elasticsearch_exporter
    state: restarted
  when: elasticsearch_exporter_service_result.changed == true

- name: ensure elasticsearch_exporter is started and enabled to start at boot.
  service:
    name: elasticsearch_exporter
    state: started
    enabled: yes
