---
# It deletes previous version of grafana dashboards using grafana datasource api's

- name: get slug details of all prometheus tagged dashboards present with auth proxy
  command: curl -sS -H 'X-WEBAUTH-USER:{{ grafana_admin_user }}' --noproxy 127.0.0.1 -XGET -i 'http://127.0.0.1:{{grafana_port}}/api/search?tag=prometheus' -H "Content-Type:application/json"
  register: dashboard_details_with_auth_proxy
  when: grafana_auth_proxy_enabled

- name: get slug details of all prometheus tagged dashboards present without auth proxy
  command: curl -sS --noproxy 127.0.0.1 -i -XGET  'http://{{ grafana_admin_user }}:{{ grafana_admin_pass }}@127.0.0.1:{{grafana_port}}/api/search?tag=prometheus' -H "Content-Type:application/json"
  register: dashboard_details_without_auth_proxy
  when: not grafana_auth_proxy_enabled 

- name: delete all the existing prometheus tagged dashboards with auth proxy
  command: curl -sS -H 'X-WEBAUTH-USER:{{ grafana_admin_user }}' --noproxy 127.0.0.1 -XDELETE -i 'http://127.0.0.1:{{grafana_port}}/api/dashboards/db/{{item.uri.split('/')[-1]}}' -H "Content-Type:application/json"
  with_items: "{{dashboard_details_with_auth_proxy.stdout_lines[-1]}}"
  when: grafana_auth_proxy_enabled
  ignore_errors: yes

- name:  delete all the existing prometheus tagged dashboards without auth proxy
  command: curl -sS --noproxy 127.0.0.1 -i -XDELETE 'http://{{ grafana_admin_user }}:{{ grafana_admin_pass }}@127.0.0.1:{{grafana_port}}/api/dashboards/db/{{item.uri.split('/')[-1]}}' -H "Content-Type:application/json"
  with_items: "{{dashboard_details_without_auth_proxy.stdout_lines[-1]}}"
  when: not grafana_auth_proxy_enabled
  ignore_errors: yes

- name: get slug details of all Prometheus tagged dashboards present with auth proxy
  command: curl -sS -H 'X-WEBAUTH-USER:{{ grafana_admin_user }}' --noproxy 127.0.0.1 -XGET -i 'http://127.0.0.1:{{grafana_port}}/api/search?tag=Prometheus' -H "Content-Type:application/json"
  register: Prometheus_tagged_dashboard_with_auth_proxy
  when: grafana_auth_proxy_enabled

- name: get slug details of all Prometheus tagged dashboards present without auth proxy
  command: curl -sS --noproxy 127.0.0.1 -i -XGET  'http://{{ grafana_admin_user }}:{{ grafana_admin_pass }}@127.0.0.1:{{grafana_port}}/api/search?tag=Prometheus' -H "Content-Type:application/json"
  register: Prometheus_tagged_dashboard_without_auth_proxy
  when: not grafana_auth_proxy_enabled

- name: delete all the existing Prometheus tagged dashboards with auth proxy
  command: curl -sS -H 'X-WEBAUTH-USER:{{ grafana_admin_user }}' --noproxy 127.0.0.1 -XDELETE -i 'http://127.0.0.1:{{grafana_port}}/api/dashboards/db/{{item.uri.split('/')[-1]}}' -H "Content-Type:application/json"
  with_items: "{{Prometheus_tagged_dashboard_with_auth_proxy.stdout_lines[-1]}}"
  when: grafana_auth_proxy_enabled
  ignore_errors: yes

- name:  delete all the existing Prometheus tagged dashboards without auth proxy
  command: curl -sS --noproxy 127.0.0.1 -i -XDELETE 'http://{{ grafana_admin_user }}:{{ grafana_admin_pass }}@127.0.0.1:{{grafana_port}}/api/dashboards/db/{{item.uri.split('/')[-1]}}' -H "Content-Type:application/json"
  with_items: "{{Prometheus_tagged_dashboard_without_auth_proxy.stdout_lines[-1]}}"
  when: not grafana_auth_proxy_enabled
  ignore_errors: yes
