{

  future.timeout = {{ ovn_cas_collection_delivery_future_timeout }}
  riak {
    cluster-nodes =
      [
        {{ riak_endpoints }}
      ]
    bucket.name = {{ ovn_cas_collection_delivery_riak_bucket }}
    min.connections = {{ ovn_cas_collection_delivery_riak_min_connections }}
    max.connections = {{ ovn_cas_collection_delivery_riak_max_connections }}
  }

  hdfs {
    core-site = "core-site.xml",
    hdfs-site = "hdfs-site.xml"
    path = "hdfs://{{ groups['hadoop_namenodes'][0] }}:{{ hadoop_namenode_port }}"
    folder-path = "/user/cloudera/ovn/"
  }

  kafka {
    bootstrap.servers =
      [
        {{ kafka_endpoints }}
      ]
    topic = {{ cas_state_kafka_topic }}
    partitions = {{ groups['kafka'] | length }}
  }

  ssl {
    source = {{ ovn_cas_collection_delivery_ssl_source }}
    file {
      keyStorePath = {{ ovn_cas_collection_delivery_ssl_keystore_path }}
      keyStorePwd = {{ ovn_cas_collection_delivery_ssl_keystore_password }}
      keyStoreType = "JKS"
    }
    vault {
      address = [
        {{ vault_endpoints }}
      ],
      open_timeout = {{ ovn_cas_collection_delivery_ssl_vault_open_timeout }},
      read_timeout = {{ ovn_cas_collection_delivery_ssl_vault_read_timeout }},
      verify = {{ ovn_cas_collection_delivery_ssl_vault_verify_cert }},
      external_pki_mount = {{ ovn_cas_collection_delivery_ssl_vault_pki_mount }},
      role = {{ ovn_cas_collection_delivery_ssl_vault_role }},
      validity = {{ ovn_cas_collection_delivery_ssl_vault_validity }}
    }
  }

  bridge_ea {
    ip = {{ ovn_bridge_ea_ip }}
    port = {{ ovn_bridge_ea_ftps_port }}
  }
}