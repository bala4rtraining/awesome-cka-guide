---
#stop the service if it exists
- name: get the service status
  shell: service {{nomad_ui_name}} status warn=false
  register: _service_status
  failed_when: _service_status.rc != 0 and ("unrecognized service" not in _service_status.stderr)
  ignore_errors: true

- name: stop the service if it exists and is running
  service: name={{nomad_ui_name}} state=stopped
  when: _service_status.rc == 0

- name: create group for nomad_ui
  group: 
    name: "{{ nomad_ui_group }}"
    state: present

- name: create user for nomad_ui
  user:
    name: "{{ nomad_ui_username }}"
    group: "{{ nomad_ui_group }}"
    state: present

- name: create nomad_ui install directory 
  file:
    path: "{{nomad_ui_install_dir}}"
    state: directory
    recurse: no
    owner: "{{ nomad_ui_username }}"
    group: "{{ nomad_ui_group }}"
    mode: "0755"

- name: unarchive nomad_ui release
  unarchive:
    src: "{{nomad_ui_artifact_url}}"
    dest: "{{nomad_ui_install_dir}}"
    copy: no
    owner: "{{ nomad_ui_username }}"
    group: "{{ nomad_ui_group }}"
    mode: "0755"

- name: nomad_ui systemd configuration
  template:
    src: "{{nomad_ui_name}}.service.j2"
    dest: "/etc/systemd/system/{{nomad_ui_name}}.service"
    owner: "{{ nomad_ui_username }}"
    group: "{{ nomad_ui_group }}"
    mode: "0755"
  notify:
    - reload nomad_ui service configuration
    - restart nomad_ui

- name: start nomad_ui service
  service:
    name: "{{nomad_ui_name}}"
    state: started
    enabled: yes