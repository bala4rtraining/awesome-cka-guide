pipeline {
        agent {
            docker {
                image 'ovndocker.artifactory.trusted.visa.com/centos7_ovn_docker'
                label 'ovn_build'
                args '-v /sys/fs/cgroup:/sys/fs/cgroup -v /home/was/.ssh:/home/was/.ssh -v /var/run/docker.sock:/var/run/docker.sock'
                customWorkspace "${env.JOB_NAME}/${env.BUILD_ID}"
            }
        }

        options {
            ansiColor('xterm-256color')
            timeout(time: 1, unit: 'HOURS')
        }
        stages {
          stage('Test Dockerfile') {
              steps {
                ansiColor('xterm') {
                  script {
                    sh '''
                      git show -s --pretty=%ce > .git/committer-email
                      docker build .
                      docker image prune -f
                    '''
                  }
                }
              }
            }
        }
        post {
          success {
              script {
                  def committer_email = readFile('.git/committer-email').trim()
                  mail body: "project build success.\n More info at: ${env.BUILD_URL} \nLast committer was: ${committer_email} \nCommit number: ${GIT_COMMIT}" ,
                          subject: "${JOB_NAME} build success" ,
                          to: "${committer_email}"
                  echo "\033[32m [BUILD SUCCESS] The build result has been notified to ${committer_email} \033[0m"
              }
          }
          failure {
              script {
                  def committer_email = readFile('.git/committer-email').trim()
                  mail body: "project build error is here: ${env.BUILD_URL} \nLast committer was: ${committer_email} \nCommit number: ${GIT_COMMIT}" ,
                          subject: "${JOB_NAME} job: Build failed",
                          to: "${committer_email}"
                  echo "\033[31m [BUILD FAILURE] The build result has been notified to ${committer_email} \033[0m"
              }
          }
        }
      }
